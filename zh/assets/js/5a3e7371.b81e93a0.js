"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[91964],{71059:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));n(61839);const o={title:"How to Organize DevLake Projects",sidebar_position:1,description:"How to Organize DevLake Projects\n"},r=void 0,s={unversionedId:"GettingStarted/HowToOrganizeDevlakeProjects",id:"version-v0.19/GettingStarted/HowToOrganizeDevlakeProjects",title:"How to Organize DevLake Projects",description:"How to Organize DevLake Projects\n",source:"@site/versioned_docs/version-v0.19/GettingStarted/HowToOrganizeDevlakeProjects.md",sourceDirName:"GettingStarted",slug:"/GettingStarted/HowToOrganizeDevlakeProjects",permalink:"/zh/docs/v0.19/GettingStarted/HowToOrganizeDevlakeProjects",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/versioned_docs/version-v0.19/GettingStarted/HowToOrganizeDevlakeProjects.md",tags:[],version:"v0.19",sidebarPosition:1,frontMatter:{title:"How to Organize DevLake Projects",sidebar_position:1,description:"How to Organize DevLake Projects\n"},sidebar:"docsSidebar",previous:{title:"Install via Docker Compose",permalink:"/zh/docs/v0.19/GettingStarted/DockerComposeSetup"},next:{title:"Install via Helm",permalink:"/zh/docs/v0.19/GettingStarted/HelmSetup"}},l={},p=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"General advice",id:"general-advice",level:4},{value:"2. What is a DevLake project?",id:"2-what-is-a-devlake-project",level:2},{value:"3. As a team lead, how many DevLake projects do I need?",id:"3-as-a-team-lead-how-many-devlake-projects-do-i-need",level:2},{value:"4. Use Cases",id:"4-use-cases",level:2},{value:"4.1. Use Case 1: Apache Projects",id:"41-use-case-1-apache-projects",level:3},{value:"4.1.1. Organizing Projects",id:"411-organizing-projects",level:4},{value:"4.1.2. Creating Connections",id:"412-creating-connections",level:4},{value:"4.1.3. Configuring Connections",id:"413-configuring-connections",level:4},{value:"4.1.4. Using connections",id:"414-using-connections",level:4},{value:"4.1.5. Resulting Metrics",id:"415-resulting-metrics",level:4},{value:"4.1.6. How can I observe metrics by project?",id:"416-how-can-i-observe-metrics-by-project",level:4},{value:"4.2. Use Case 2: Multiple Teams with Distinct Projects",id:"42-use-case-2-multiple-teams-with-distinct-projects",level:3},{value:"Quick Overview:",id:"quick-overview",level:4},{value:"Step-by-Step Simplification:",id:"step-by-step-simplification",level:4},{value:"4.2.1. Organizing Projects",id:"421-organizing-projects",level:4},{value:"4.2.2. Adding Connections",id:"422-adding-connections",level:4},{value:"4.2.3. Setting Scopes",id:"423-setting-scopes",level:4},{value:"4.2.4. Resulting Metrics",id:"424-resulting-metrics",level:4},{value:"5. About Webhooks",id:"5-about-webhooks",level:2},{value:"6. Troubleshooting",id:"6-troubleshooting",level:2}],c={toc:p};function d(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"1-introduction"},"1. Introduction"),(0,i.kt)("p",null,"This guide provides step-by-step instructions for organizing projects in DevLake.\nIt is intended for team leads and developers who want to optimize their workflow.\nHerein, we will explore various use cases to demonstrate the practical application of these instructions."),(0,i.kt)("p",null,"Development teams typically manage ",(0,i.kt)("inlineCode",{parentName:"p"},"pull requests"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents")," using various boards."),(0,i.kt)("p",null,"Based on such, we want to measure their productivity and stability. This is how ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/v0.19/DORA"},"DORA")," does that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Productivity:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"How many times does the team ",(0,i.kt)("inlineCode",{parentName:"li"},"deploy"),"? (a.k.a. ",(0,i.kt)("a",{parentName:"li",href:"/zh/docs/v0.19/Metrics/DeploymentFrequency"},"Deployment Frequency"),")"),(0,i.kt)("li",{parentName:"ul"},"How fast are the ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests")," resolved? (a.k.a. ",(0,i.kt)("a",{parentName:"li",href:"/zh/docs/v0.19/Metrics/LeadTimeForChanges"},"Lead Time"),")"))),(0,i.kt)("li",{parentName:"ul"},"Stability:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"How many ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents")," per ",(0,i.kt)("inlineCode",{parentName:"li"},"deploys")," does the team have? (a.k.a. ",(0,i.kt)("a",{parentName:"li",href:"/zh/docs/v0.19/Metrics/CFR"},"Change Failure Rate"),")"),(0,i.kt)("li",{parentName:"ul"},"How fast are these ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents")," solved? (a.k.a. ",(0,i.kt)("a",{parentName:"li",href:"/zh/docs/v0.19/Metrics/MTTR"},"Median Time to Restore"),")")))),(0,i.kt)("p",null,"All these questions/metrics are based on either ",(0,i.kt)("inlineCode",{parentName:"p"},"pull requests"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents"),"."),(0,i.kt)("p",null,"Note: ",(0,i.kt)("em",{parentName:"p"},"All three are completely separate entities and are associated only with their project.")),(0,i.kt)("h4",{id:"general-advice"},"General advice"),(0,i.kt)("p",null,"There are 3 red lines when it comes to structuring your DevLake ",(0,i.kt)("inlineCode",{parentName:"p"},"projects"),":"),(0,i.kt)("p",null,"But when we scale this up, a few problems arise:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A team usually works with multiple ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")),(0,i.kt)("li",{parentName:"ul"},"A team also might work on different projects, and we want to measure these projects separately (e.g. it is not the same to work on a big old legacy as on a greenfield)"),(0,i.kt)("li",{parentName:"ul"},"There may be multiple teams"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"board")," contains incidents of multiple teams or projects"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"repository")," is managed by multiple teams or projects, e.g. a monorepo"),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"pipeline")," can trigger deployments in multiple repos"),(0,i.kt)("li",{parentName:"ul"},"Some organizations want to measure DORA based on projects, and some want to measure it by teams")),(0,i.kt)("p",null,"This is where the ",(0,i.kt)("inlineCode",{parentName:"p"},"project")," concept comes into play."),(0,i.kt)("h2",{id:"2-what-is-a-devlake-project"},"2. What is a DevLake project?"),(0,i.kt)("p",null,"In practical terms, a project usually involves building or researching solutions to address specific problems\nor explore new opportunities. A DevLake project is a grouping of ",(0,i.kt)("inlineCode",{parentName:"p"},"pull requests"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents"),".\nIt can be seen as a real-world project or product line. DevLake measures DORA metrics for each project."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(31560).Z,width:"2594",height:"1810"})),(0,i.kt)("p",null,"Note: ",(0,i.kt)("em",{parentName:"p"},"It does not matter if a team works on a particular repository more than another.\nThe metrics are calculated over the entire set of repos, and the values are accumulated.\nMore on that: ",(0,i.kt)("a",{parentName:"em",href:"/zh/docs/v0.19/Troubleshooting/Dashboard#debugging-dora-issue-metrics"},"Debugging DORA Issue Metrics"),".")),(0,i.kt)("h2",{id:"3-as-a-team-lead-how-many-devlake-projects-do-i-need"},"3. As a team lead, how many DevLake projects do I need?"),(0,i.kt)("p",null,"DevLake's flexible structure enables you to organize ",(0,i.kt)("inlineCode",{parentName:"p"},"pull requests"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents"),"\nin a manner tailored to your specific projects, teams, or technologies."),(0,i.kt)("p",null,"The examples below show the patterns of how to organize your projects.\nTo keep things simple we assume that we work with ",(0,i.kt)("strong",{parentName:"p"},"GitHub")," repos, ",(0,i.kt)("strong",{parentName:"p"},"Jira")," boards,\nand ",(0,i.kt)("strong",{parentName:"p"},"Jenkins CI/CD")," deploys in each GitHub repo."),(0,i.kt)("p",null,"The same would apply to other repos (e.g. GitLab or BitBucket), boards (e.g. TAPD),\nor CI/CD (e.g. GitLab CI, Azure DevOps)."),(0,i.kt)("h2",{id:"4-use-cases"},"4. Use Cases"),(0,i.kt)("p",null,"This section demonstrates real-life situations and how they get reflected in DevLake."),(0,i.kt)("p",null,"Disclaimer: ",(0,i.kt)("em",{parentName:"p"},"To keep this guide shorter, some technical details are only mentioned in\n",(0,i.kt)("a",{parentName:"em",href:"/zh/docs/v0.19/GettingStarted/HowToOrganizeDevlakeProjects#41-use-case-1-apache-projects"},"Use Case 1"),",\nso if you read this page for the first time, make sure to go through them in order.")),(0,i.kt)("p",null,"Note: ",(0,i.kt)("em",{parentName:"p"},"If you use webhooks, check the ",(0,i.kt)("a",{parentName:"em",href:"/zh/docs/v0.19/GettingStarted/HowToOrganizeDevlakeProjects#5-about-webhooks"},"quick note")," about them below.")),(0,i.kt)("h3",{id:"41-use-case-1-apache-projects"},"4.1. Use Case 1: Apache Projects"),(0,i.kt)("p",null,"Apache Software Foundation (ASF) has and is developing many\n",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/List_of_Apache_Software_Foundation_projects"},"projects"),"."),(0,i.kt)("p",null,"To take an example we will analyze 2 ",(0,i.kt)("inlineCode",{parentName:"p"},"projects"),": DevLake and ",(0,i.kt)("a",{parentName:"p",href:"https://spark.apache.org/"},"Spark"),".\nBoth are independent of each other. Assume that ASF wants to check the health of the development\nand maintenance of these projects with DORA."),(0,i.kt)("p",null,"DevLake manages 3 ",(0,i.kt)("inlineCode",{parentName:"p"},"repos"),": ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake"},"incubator-devlake"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake-website"},"incubator-devlake-website"),",\nand ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake-helm-chart"},"incubator-devlake-helm-chart"),".\nThere are many repos related to ",(0,i.kt)("em",{parentName:"p"},"Spark")," in one way or another. To keep it simple,\nwe will also pick 3 ",(0,i.kt)("inlineCode",{parentName:"p"},"repos"),": ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/spark"},"spark"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/spark-website"},"spark-website"),", and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-livy"},"incubator-livy"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(55454).Z,width:"808",height:"305"})),(0,i.kt)("p",null,"Both projects use GitHub for storing code (including ",(0,i.kt)("inlineCode",{parentName:"p"},"pull requests"),"), ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments")," on GitHub Actions, and ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents"),"."),(0,i.kt)("p",null,"Note: ",(0,i.kt)("em",{parentName:"p"},"To avoid confusion between DevLake as a ",(0,i.kt)("inlineCode",{parentName:"em"},"project")," in this use case and DevLake as a platform,\nwe will use complete names i.e. ",(0,i.kt)("inlineCode",{parentName:"em"},"project DevLake")," and ",(0,i.kt)("inlineCode",{parentName:"em"},"platform DevLake")," respectively.")),(0,i.kt)("h4",{id:"411-organizing-projects"},"4.1.1. Organizing Projects"),(0,i.kt)("p",null,"First, create two projects on the DevLake platform, one for DevLake and one for Spark.\nThese will represent real-world projects."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(61954).Z,width:"1718",height:"557"}),"\n",(0,i.kt)("img",{src:n(90585).Z,width:"830",height:"357"})),(0,i.kt)("p",null,"Once these are created, the connections created in the following steps will be bound to them."),(0,i.kt)("h4",{id:"412-creating-connections"},"4.1.2. Creating Connections"),(0,i.kt)("p",null,"Since all is on GitHub in this case, we can use just 1 connection with the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"it includes all the project's ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")),(0,i.kt)("li",{parentName:"ul"},"its scope includes everything we work with (i.e. ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"deployments"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents"),")")),(0,i.kt)("p",null,"If you store ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents")," on Jira, for example, you will need to create a separate connection just for them.\nThe same applies to ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),", a separate connection is needed in case they are stored in Jenkins (or any other host for ",(0,i.kt)("inlineCode",{parentName:"p"},"deployments"),")."),(0,i.kt)("h4",{id:"413-configuring-connections"},"4.1.3. Configuring Connections"),(0,i.kt)("p",null,"This part is described in ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/Configuration/GitHub"},"GitHub")," connection configuration.\nFor other platforms check the ",(0,i.kt)("a",{parentName:"p",href:"/docs/Configuration"},"Configuration Guide")),(0,i.kt)("h4",{id:"414-using-connections"},"4.1.4. Using connections"),(0,i.kt)("p",null,"At this point, we have projects and connections created on the platform DevLake.\nIt is time to bind those connections to the projects. To do so, follow the steps\ndescribed in the ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/Configuration/Tutorial"},"Tutorial"),"."),(0,i.kt)("h4",{id:"415-resulting-metrics"},"4.1.5. Resulting Metrics"),(0,i.kt)("p",null,"To know if the data of a project is successfully collected go to your DORA Dashboard:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(16037).Z,width:"1720",height:"522"}),"\n",(0,i.kt)("img",{src:n(88171).Z,width:"1915",height:"835"})),(0,i.kt)("p",null,"If everything goes well, you should see all the 4 charts.\nIf something is wrong, and you are puzzled as to why, check out the\n",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/v0.19/Troubleshooting/Dashboard#debugging-dora-issue-metrics"},"Debugging Dora Issue Metrics")," page."),(0,i.kt)("h4",{id:"416-how-can-i-observe-metrics-by-project"},"4.1.6. How can I observe metrics by project?"),(0,i.kt)("p",null,"In the same DORA dashboard check out this menu point:\n",(0,i.kt)("img",{src:n(40734).Z,width:"1902",height:"395"})),(0,i.kt)("p",null,"The metrics should change when you select or deselect projects, representing the projects you selected."),(0,i.kt)("h3",{id:"42-use-case-2-multiple-teams-with-distinct-projects"},"4.2. Use Case 2: Multiple Teams with Distinct Projects"),(0,i.kt)("p",null,"Consider a scenario where a company operates with several teams, each managing one or more projects.\nFor illustration, we will explore two such teams: the Payments team and the Internal Tools team.\nHere's a simplified representation of this scenario:"),(0,i.kt)("h4",{id:"quick-overview"},"Quick Overview:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Payments team works on a single project: \u201cpayments\u201d."),(0,i.kt)("li",{parentName:"ul"},"The Internal Tools team manages two projects: \u201cit-legacy\u201d and \u201cit-new\u201d."),(0,i.kt)("li",{parentName:"ul"},"Both teams use different sets of tools and boards.")),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(53513).Z,width:"760",height:"621"})),(0,i.kt)("h4",{id:"step-by-step-simplification"},"Step-by-Step Simplification:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Define the Teams and Projects:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Payments Team"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'One project: "payments". '))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Internal Tools Team"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Two projects: "it-legacy" and "it-new". '))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Understand the Tools"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Assume both teams utilize GitHub for ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")," and Jenkins for CI/CD."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("em",{parentName:"li"},"Payments")," team uses Jira boards."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("em",{parentName:"li"},"Internal Tools")," team uses webhooks for reporting incidents.")))),(0,i.kt)("h4",{id:"421-organizing-projects"},"4.2.1. Organizing Projects"),(0,i.kt)("p",null,"DORA is effective for observing the impacts of methodology changes within a team.\nFrom DORA\u2019s standpoint, the concept of distinct ",(0,i.kt)("inlineCode",{parentName:"p"},"teams")," is not recognized; only ",(0,i.kt)("inlineCode",{parentName:"p"},"projects")," exist.\nAdding a ",(0,i.kt)("inlineCode",{parentName:"p"},"team")," concept introduces unnecessary complexity without providing any substantial benefit. "),(0,i.kt)("p",null,"In DevLake, we create three ",(0,i.kt)("inlineCode",{parentName:"p"},"projects"),": ",(0,i.kt)("em",{parentName:"p"},"payments"),", ",(0,i.kt)("em",{parentName:"p"},"it-legacy"),", and ",(0,i.kt)("em",{parentName:"p"},"it-new"),"."),(0,i.kt)("p",null,"It is crucial to maintain ",(0,i.kt)("strong",{parentName:"p"},"atomic")," ",(0,i.kt)("inlineCode",{parentName:"p"},"projects"),", representing the smallest, independent units,\nto prevent complexity and ensure precise data representation. ",(0,i.kt)("strong",{parentName:"p"},"Atomic")," ",(0,i.kt)("inlineCode",{parentName:"p"},"projects")," allow for a more flexible\nand accurate data comparison and combination between ",(0,i.kt)("inlineCode",{parentName:"p"},"projects"),"."),(0,i.kt)("h4",{id:"422-adding-connections"},"4.2.2. Adding Connections"),(0,i.kt)("p",null,"Create just one connection and reuse it across projects by adding data scopes.\nThis method optimizes data collection, minimizing redundancy and ensuring more efficient use of resources."),(0,i.kt)("p",null,"It is NOT recommended to create multiple connections, for instance, GitHub repos, as it",(0,i.kt)("br",{parentName:"p"}),"\n","will increase the time to collect the data due to the storage of multiple copies of shared repos in the database."),(0,i.kt)("p",null,"The only exception is the webhooks: ",(0,i.kt)("strong",{parentName:"p"},"we must have 1 connection per project"),",\nas this is the only way DevLake can accurately assign ",(0,i.kt)("inlineCode",{parentName:"p"},"incidents")," to the corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"project"),"."),(0,i.kt)("p",null,"So, in total we will have only these connections:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 connection for all GitHub ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")," to collect ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests")),(0,i.kt)("li",{parentName:"ul"},"1 connection to Jenkins to collect all ",(0,i.kt)("inlineCode",{parentName:"li"},"deployments")),(0,i.kt)("li",{parentName:"ul"},"1 connection to Jira to collect ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents")),(0,i.kt)("li",{parentName:"ul"},"2 webhook connections to collect ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents"),": 1 per each ",(0,i.kt)("inlineCode",{parentName:"li"},"project")," that uses webhooks (",(0,i.kt)("em",{parentName:"li"},"it-legacy")," and ",(0,i.kt)("em",{parentName:"li"},"it-new"),")")),(0,i.kt)("p",null,"The step-by-step ",(0,i.kt)("a",{parentName:"p",href:"/docs/Configuration"},"Configuration Guide")," shows how to both add connections\nand set scopes as described in the next chapter."),(0,i.kt)("h4",{id:"423-setting-scopes"},"4.2.3. Setting Scopes"),(0,i.kt)("p",null,"Now, add the connections to our projects and set the scope to them:"),(0,i.kt)("p",null,"For payments ",(0,i.kt)("inlineCode",{parentName:"p"},"project"),": "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add 1 scope to GitHub connection for ",(0,i.kt)("em",{parentName:"li"},"p1...p10")," ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")," to collect their ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests")),(0,i.kt)("li",{parentName:"ul"},"add 1 scope to Jenkins for ",(0,i.kt)("inlineCode",{parentName:"li"},"deployments")," of ",(0,i.kt)("em",{parentName:"li"},"p1...p10")," ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")),(0,i.kt)("li",{parentName:"ul"},"add 1 scope to Jira to collect ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents"))),(0,i.kt)("p",null,"For it-legacy ",(0,i.kt)("inlineCode",{parentName:"p"},"project"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add 1 scope to GitHub for ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")," ",(0,i.kt)("em",{parentName:"li"},"it-legacy-1"),", ",(0,i.kt)("em",{parentName:"li"},"it-legacy-2"),", ",(0,i.kt)("em",{parentName:"li"},"it-core-1")," and ",(0,i.kt)("em",{parentName:"li"},"it-core-2")," to collect their ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests")),(0,i.kt)("li",{parentName:"ul"},"add 1 scope to Jenkins for ",(0,i.kt)("inlineCode",{parentName:"li"},"deployments")," of ",(0,i.kt)("em",{parentName:"li"},"it-legacy-1"),", ",(0,i.kt)("em",{parentName:"li"},"it-legacy-2"),", ",(0,i.kt)("em",{parentName:"li"},"it-core-1")," and ",(0,i.kt)("em",{parentName:"li"},"it-core-2")," ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")),(0,i.kt)("li",{parentName:"ul"},"include the ",(0,i.kt)("em",{parentName:"li"},"it-legacy")," webhook for collecting ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents"))),(0,i.kt)("p",null,"For it-new ",(0,i.kt)("inlineCode",{parentName:"p"},"project"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"add 1 scope to GitHub for ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")," ",(0,i.kt)("em",{parentName:"li"},"it-new-1"),", ",(0,i.kt)("em",{parentName:"li"},"it-new-2"),", ",(0,i.kt)("em",{parentName:"li"},"it-core-1")," and ",(0,i.kt)("em",{parentName:"li"},"it-core-2")," to collect their ",(0,i.kt)("inlineCode",{parentName:"li"},"pull requests")),(0,i.kt)("li",{parentName:"ul"},"add 1 scope to Jenkins for ",(0,i.kt)("inlineCode",{parentName:"li"},"deployments")," of ",(0,i.kt)("em",{parentName:"li"},"it-new-1"),", ",(0,i.kt)("em",{parentName:"li"},"it-new-2"),", ",(0,i.kt)("em",{parentName:"li"},"it-core-1")," and ",(0,i.kt)("em",{parentName:"li"},"it-core-2")," ",(0,i.kt)("inlineCode",{parentName:"li"},"repos")),(0,i.kt)("li",{parentName:"ul"},"include the ",(0,i.kt)("em",{parentName:"li"},"it-new")," webhook for collecting ",(0,i.kt)("inlineCode",{parentName:"li"},"incidents"))),(0,i.kt)("h4",{id:"424-resulting-metrics"},"4.2.4. Resulting Metrics"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/v0.19/GettingStarted/HowToOrganizeDevlakeProjects#415-resulting-metrics"},"4.1.5 Resulting Metrics")),(0,i.kt)("h2",{id:"5-about-webhooks"},"5. About Webhooks"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Assigning a UNIQUE webhook to each project is critical.")," This ensures that the DevLake platform\ncorrectly associates the incoming data with the corresponding project through the webhook."),(0,i.kt)("p",null,"If you use the same webhook across multiple projects, the data sent by it ",(0,i.kt)("strong",{parentName:"p"},"will be replicated per each\nproject that uses that webhook"),". More information available on the ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/Plugins/webhook"},"Webhook")," page"),(0,i.kt)("h2",{id:"6-troubleshooting"},"6. Troubleshooting"),(0,i.kt)("p",null,"If you run into any problem, please check the ",(0,i.kt)("a",{parentName:"p",href:"/zh/docs/Troubleshooting/Configuration"},"Troubleshooting")," or ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake/issues"},"create an issue")))}d.isMDXComponent=!0},61954:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/create_project_1-6acc9250dc0a4aad6225ebc8c5b2d477.png"},90585:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/create_project_2-a1bab3ab059002352d53f2609ca9410d.png"},16037:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/navigate_to_dora_1-cc59f31f0dcb5e45750e6ae972675a8b.png"},88171:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/navigate_to_dora_2-047353792d77d9c6e828e6f13b84fbf3.png"},40734:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/observe_metrics_by_project_panel-74cecdf33da26d2f38c6d0ea8a8de910.png"},31560:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/project_pipeline-06b394bb2f3453ffd888f20affbe2d5d.png"},55454:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/project_use_case_1-9473d6310f48a48761835cb210b50117.png"},53513:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/project_use_case_2-eeabdb89ccbcbcc78357a51429f0fc57.png"}}]);