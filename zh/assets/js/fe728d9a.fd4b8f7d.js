"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[2071],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,f=s["".concat(c,".").concat(m)]||s[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2354:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={title:"Tapd",description:"Tapd Plugin\n"},i=void 0,l={unversionedId:"Plugins/tapd",id:"Plugins/tapd",title:"Tapd",description:"Tapd Plugin\n",source:"@site/docs/Plugins/tapd.md",sourceDirName:"Plugins",slug:"/Plugins/tapd",permalink:"/zh/docs/Plugins/tapd",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/Plugins/tapd.md",tags:[],version:"current",frontMatter:{title:"Tapd",description:"Tapd Plugin\n"},sidebar:"docsSidebar",previous:{title:"RefDiff",permalink:"/zh/docs/Plugins/refdiff"},next:{title:"Live Demo",permalink:"/zh/docs/LiveDemo"}},c={},p=[{value:"Summary",id:"summary",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Collect Data From Tapd",id:"collect-data-from-tapd",level:2}],d={toc:p};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"This plugin collects Tapd data through Tapd REST API. "),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Configuring Tapd via ",(0,a.kt)("a",{parentName:"p",href:"/zh/docs/UserManuals/ConfigUI/Tapd"},"config-ui"),"."),(0,a.kt)("h2",{id:"collect-data-from-tapd"},"Collect Data From Tapd"),(0,a.kt)("p",null,"To collect data, select ",(0,a.kt)("inlineCode",{parentName:"p"},"Advanced Mode")," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Create Blueprint")," page and paste a JSON config like the following:"),(0,a.kt)("blockquote",null,(0,a.kt)("font",{color:"#ED6A45"},"Warning: Data collection only supports single-task execution, and the results of concurrent multi-task execution may not meet expectations.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n    [\n        {\n            "plugin": "tapd",\n            "options": {\n                "workspaceId": 34***66,\n                "connectionId": 1\n            }\n        }\n    ],\n    [\n        {\n            "plugin": "tapd",\n            "options": {\n                "workspaceId": 6***14,\n                "connectionId": 1\n            }\n        }\n    ]\n]\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"connectionId"),": The ",(0,a.kt)("inlineCode",{parentName:"li"},"ID")," field from ",(0,a.kt)("strong",{parentName:"li"},"TAPD Integration")," page."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"workspaceId"),": TAPD workspace id, you can get it from two ways: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"url: ",(0,a.kt)("img",{alt:"tapd-workspace-id",src:n(51604).Z,width:"590",height:"30"})," "),(0,a.kt)("li",{parentName:"ul"},"db: you can check workspace info from db._tool_tapd_workspaces and get all workspaceId you want to collect after execution of the following json in ",(0,a.kt)("inlineCode",{parentName:"li"},"advanced mode")," ",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n        [\n                {\n                        "plugin": "tapd",\n                        "options": {\n                                "companyId": 55850509,\n                                "workspaceId": 1,\n                                "connectionId": 1\n                        },\n                        "subtasks": [\n                                "collectCompanies",\n                                "extractCompanies"\n                        ]\n                }\n        ]\n]\n')))))))}u.isMDXComponent=!0},51604:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/tapd-find-workspace-id-9ff3c284a5966c50cb962518da677028.png"}}]);