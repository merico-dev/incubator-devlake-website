"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[8291],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},20921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"Webhook",description:"Webhook Plugin\n"},i=void 0,o={unversionedId:"Plugins/webhook",id:"Plugins/webhook",title:"Webhook",description:"Webhook Plugin\n",source:"@site/docs/Plugins/webhook.md",sourceDirName:"Plugins",slug:"/Plugins/webhook",permalink:"/zh/docs/Plugins/webhook",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/Plugins/webhook.md",tags:[],version:"current",frontMatter:{title:"Webhook",description:"Webhook Plugin\n"},sidebar:"docsSidebar",previous:{title:"Tapd",permalink:"/zh/docs/Plugins/tapd"},next:{title:"Live Demo",permalink:"/zh/docs/LiveDemo"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Creating webhooks in DevLake",id:"creating-webhooks-in-devlake",level:2},{value:"Add a new webhook",id:"add-a-new-webhook",level:3},{value:"Deployments",id:"deployments",level:2},{value:"Register a deployment",id:"register-a-deployment",level:4},{value:"Deployments Sample API Calls",id:"deployments-sample-api-calls",level:3},{value:"Sample Config in CircleCI",id:"sample-config-in-circleci",level:3},{value:"Incident / Issue",id:"incident--issue",level:2},{value:"Update or Create Issues",id:"update-or-create-issues",level:4},{value:"Close Issues (Optional)",id:"close-issues-optional",level:4},{value:"Issues Sample API Calls",id:"issues-sample-api-calls",level:3}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"An Incoming Webhook allows users to actively push data to DevLake. It's particularly useful when DevLake is missing the plugin that pulls data from your DevOps tool."),(0,r.kt)("p",null,"When you create an Incoming Webhook within DevLake, DevLake generates a unique URL. You can post JSON payloads to this URL to push data to DevLake."),(0,r.kt)("p",null,"As of v0.14.0, users can push incidents and deployments data required by DORA metrics to DevLake via Incoming Webhooks."),(0,r.kt)("h2",{id:"creating-webhooks-in-devlake"},"Creating webhooks in DevLake"),(0,r.kt)("h3",{id:"add-a-new-webhook"},"Add a new webhook"),(0,r.kt)("p",null,'To add a new webhook, go to the "Data Connections" page in config-ui and select "Issue/Deployment Incoming/Webhook".\n',(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3294100/191309840-460fbc9c-15a1-4b12-a510-9ed5ccd8f2b0.png",alt:"image"})),(0,r.kt)("p",null,"We recommand that you give your webhook connection a unique name so that you can identify and manage where you have used it later."),(0,r.kt)("p",null,'After clicking on the "Generate POST URL" button, you will find four webhook URLs. Copy the ones that suit your usage into your CI or issue tracking systems. You can always come back to the webhook page to copy the URLs later on.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3294100/195338899-2cb3a91c-3110-43ec-aec3-0ab2498e56d7.png",alt:"image"})),(0,r.kt)("h2",{id:"deployments"},"Deployments"),(0,r.kt)("p",null,"If your CI/CD tool isn't already supported by DevLake, you can insert curl commands as ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/Plugins/webhook#deployments-sample-api-calls"},"Sample API Calls")," in your CI/CD script to post deployment data to DevLake."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notice"),": The URL shown in the screenshot and the following samples, ",(0,r.kt)("inlineCode",{parentName:"p"},"https://sample-url.com/..."),", is just an example and should be replaced with the actual URL copied from your Config UI."),(0,r.kt)("h4",{id:"register-a-deployment"},"Register a deployment"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST https://sample-url.com/api/plugins/webhook/1/cicd_tasks")),(0,r.kt)("p",null,"The body should be a JSON and include columns as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Keyname"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"repo_url"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Repository url or other ",(0,r.kt)("strong",{parentName:"td"},"unique")," string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"commit_sha"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"commit sha")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"environment"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"which type of machine did this task run in. one of ",(0,r.kt)("inlineCode",{parentName:"td"},"PRODUCTION")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STAGING")," ",(0,r.kt)("inlineCode",{parentName:"td"},"TESTING")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DEVELOPMENT"),". ",(0,r.kt)("br",null),"Default is ",(0,r.kt)("inlineCode",{parentName:"td"},"PRODUCTION"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"start_time"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"Time, Format should be 2020-01-01T12:00:00+00:00",(0,r.kt)("br",null),"If absent, it is when DevLake receives the POST request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"end_time"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"Time, Format should be 2020-01-01T12:00:00+00:00",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"start_time")," becomes required if end_time is provided. If absent, this column is null.")))),(0,r.kt)("h3",{id:"deployments-sample-api-calls"},"Deployments Sample API Calls"),(0,r.kt)("p",null,"Sample CURL for the tasks starting and finishing in deploy pipelines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl https://sample-url.com/api/plugins/webhook/1/deployments -X \'POST\' -d \'{"repo_url":"devlake","commit_sha":"015e3d3b480e417aede5a1293bd61de9b0fd051d","start_time":"2020-01-01T12:00:00+00:00","end_time":"2020-01-01T12:59:59+00:00","environment":"PRODUCTION"}\'\n')),(0,r.kt)("p",null,"Read more in Swagger: ",(0,r.kt)("a",{parentName:"p",href:"https://sample-url.com/api/swagger/index.html#/plugins%2Fwebhook/post_plugins_webhook__connectionId_deployments"},"https://sample-url.com/api/swagger/index.html#/plugins%2Fwebhook/post_plugins_webhook__connectionId_deployments"),". "),(0,r.kt)("h3",{id:"sample-config-in-circleci"},"Sample Config in CircleCI"),(0,r.kt)("p",null,"CircleCI pipelines are the highest-level unit of work. Pipelines include your workflows, which coordinate your jobs. The following demo is regarding a CircleCI workflow running as an entity task in DevLake."),(0,r.kt)("p",null,"In CircleCI, the data defined in ",(0,r.kt)("em",{parentName:"p"},"env")," describe the build machine, pipelines and tasks (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"$CIRCLE_WORKFLOW_JOB_ID"),"), etc. You will need to add config to send task data, read from the ",(0,r.kt)("em",{parentName:"p"},"env"),", for each workflow."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: 2.1\n\njobs:\n  build:\n    docker:\n      - image: cimg/base:stable\n    steps:\n      - checkout\n      - run:\n          name: "build"\n          command: |\n            echo Hello, World!\n\n  deploy:\n    docker:\n      - image: cimg/base:stable\n    steps:\n      - checkout\n      - run:\n          name: "deploy"\n          command: |\n            # record start before deploy\n            start_time=`date \'+%Y-%m-%dT%H:%M:%S%z\'`\n            \n            # some deploy here ...\n            echo Hello, World!\n            \n            # send request after deploy\n            curl https://sample-url.com/api/plugins/webhook/1/cicd_tasks -X \'POST\' -d "{\\"environment\\":\\"PRODUCTION\\",\\"start_time\\":\\"$start_time\\",\\"repo_url\\":\\"$CIRCLE_REPOSITORY_URL\\",\\"commit_sha\\":\\"$CIRCLE_SHA1\\"}"\n\nworkflows:\n  say-hello-workflow:\n    jobs:\n      - build\n      - deploy\n')),(0,r.kt)("h2",{id:"incident--issue"},"Incident / Issue"),(0,r.kt)("p",null,"If you want to collect issue or incident data from your system, you can use the two webhooks for issues. "),(0,r.kt)("h4",{id:"update-or-create-issues"},"Update or Create Issues"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST https://sample-url.com/api/plugins/webhook/1/issues")),(0,r.kt)("p",null,"needs to be called when an issue or incident is created. The body  should be a JSON and include columns as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Keyname"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"board_key"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"issue belongs to which board/project")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"url"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"issue's URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"issue_key"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"issue's key, needs to be unique in a connection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"title"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"description"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"epic_key"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"in which epic.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"type"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"type, such as bug/incident/epic/...")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"status"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"issue's status. Must be one of ",(0,r.kt)("inlineCode",{parentName:"td"},"TODO")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DONE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IN_PROGRESS"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"original_status"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"status in your system, such as created/open/closed/...")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"story_point"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"resolution_date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"date, Format should be 2020-01-01T12:00:00+00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"created_date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"date, Format should be 2020-01-01T12:00:00+00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"updated_date"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"date, Format should be 2020-01-01T12:00:00+00:00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"lead_time_minutes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"how long from this issue accepted to develop")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"parent_issue_key"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"priority"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"original_estimate_minutes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"time_spent_minutes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"time_remaining_minutes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"creator_id"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"the user id of the creator")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"creator_name"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"the user name of the creator, it will just be used to display")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"assignee_id"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"assignee_name"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"severity"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"component"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2716\ufe0f No"),(0,r.kt)("td",{parentName:"tr",align:null},"which component is this issue in.")))),(0,r.kt)("p",null,"More information about these columns at ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/DataModels/DevLakeDomainLayerSchema#domain-1---issue-tracking"},"DomainLayerIssueTracking"),"."),(0,r.kt)("h4",{id:"close-issues-optional"},"Close Issues (Optional)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"POST https://sample-url.com/api/plugins/webhook/1/issue/:boardKey/:issueId/close")),(0,r.kt)("p",null,"needs to be called when an issue or incident is closed. Replace ",(0,r.kt)("inlineCode",{parentName:"p"},":boardKey")," and ",(0,r.kt)("inlineCode",{parentName:"p"},":issueId")," with specific strings and keep the body empty."),(0,r.kt)("h3",{id:"issues-sample-api-calls"},"Issues Sample API Calls"),(0,r.kt)("p",null,"Sample CURL for Issue Creating :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'curl https://sample-url.com/api/plugins/webhook/1/issues -X \'POST\' -d \'{"board_key":"DLK","url":"","issue_key":"DLK-1234","title":"a feature from DLK","description":"","epic_key":"","type":"BUG","status":"TODO","original_status":"created","story_point":0,"resolution_date":null,"created_date":"2020-01-01T12:00:00+00:00","updated_date":null,"lead_time_minutes":0,"parent_issue_key":"DLK-1200","priority":"","original_estimate_minutes":0,"time_spent_minutes":0,"time_remaining_minutes":0,"creator_id":"user1131","creator_name":"Nick name 1","assignee_id":"user1132","assignee_name":"Nick name 2","severity":"","component":""}\'\n')),(0,r.kt)("p",null,"Sample CURL for Issue Closing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl http://127.0.0.1:4000/api/plugins/webhook/1/issue/DLK/DLK-1234/close -X 'POST'\n")),(0,r.kt)("p",null,"Read more in Swagger: ",(0,r.kt)("a",{parentName:"p",href:"https://sample-url.com/api/swagger/index.html#/plugins%2Fwebhook/post_plugins_webhook__connectionId_issues"},"https://sample-url.com/api/swagger/index.html#/plugins%2Fwebhook/post_plugins_webhook__connectionId_issues"),"."))}m.isMDXComponent=!0}}]);