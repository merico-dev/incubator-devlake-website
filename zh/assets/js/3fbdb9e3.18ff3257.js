"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[3080],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},18059:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"DORA",sidebar_position:6,description:"DORA Metrics\n"},o=void 0,l={unversionedId:"UserManuals/DORA",id:"UserManuals/DORA",title:"DORA",description:"DORA Metrics\n",source:"@site/docs/UserManuals/DORA.md",sourceDirName:"UserManuals",slug:"/UserManuals/DORA",permalink:"/zh/docs/UserManuals/DORA",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/UserManuals/DORA.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"DORA",sidebar_position:6,description:"DORA Metrics\n"},sidebar:"docsSidebar",previous:{title:"Grafana User Guide",permalink:"/zh/docs/UserManuals/Dashboards/GrafanaUserGuide"},next:{title:"Team Configuration",permalink:"/zh/docs/UserManuals/TeamConfiguration"}},s={},p=[{value:"What are DORA metrics?",id:"what-are-dora-metrics",level:2},{value:"Why is DORA important?",id:"why-is-dora-important",level:2},{value:"How to implement DORA metrics with Apache DevLake?",id:"how-to-implement-dora-metrics-with-apache-devlake",level:2},{value:"A real-world example",id:"a-real-world-example",level:2},{value:"Collect GitHub &amp; Jira data via <code>blueprint</code>",id:"collect-github--jira-data-via-blueprint",level:3},{value:"Collect CircleCI data via <code>webhook</code>",id:"collect-circleci-data-via-webhook",level:3},{value:"View and customize DevLake&#39;s DORA dashboard",id:"view-and-customize-devlakes-dora-dashboard",level:3}],c={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document describes all things about DORA, why and how to implement DORA metrics with Apache DevLake."),(0,r.kt)("h2",{id:"what-are-dora-metrics"},"What are DORA metrics?"),(0,r.kt)("p",null,'Created six years ago by a team of researchers, DORA stands for "DevOps Research & Assessment" and is the answer to years of research, having examined thousands of teams, seeking a reliable and actionable approach to understanding the performance of software development teams.'),(0,r.kt)("p",null,"DORA has since become a standardized framework focused on the stability and velocity of development processes, one that avoids the more controversial aspects of productivity measurements and individual performance metrics."),(0,r.kt)("p",null,"There are two key clusters of data inside DORA: Velocity and Stability. The DORA framework is focused on keeping these two in context with each other, as a whole, rather than as independent variables, making the data more challenging to misinterpret or abuse. "),(0,r.kt)("p",null,"Within velocity are two core metrics: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://devlake.apache.org/docs/Metrics/DeploymentFrequency"},"Deployment Frequency"),": Number of successful deployments to production, how rapidly is your team releasing to users?"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://devlake.apache.org/docs/Metrics/LeadTimeForChanges"},"Lead Time for Changes"),": How long does it take from commit to the code running in production? This is important, as it reflects how quickly your team can respond to user requirements.")),(0,r.kt)("p",null,"Stability is composed of two core metrics:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://devlake.apache.org/docs/Metrics/MTTR"},"Median Time to Restore Service"),": How long does it take the team to properly recover from a failure once it is identified?"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://devlake.apache.org/docs/Metrics/CFR"},"Change Failure Rate"),": How often are your deployments causing a failure?")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/71EUflb.png",alt:null})),(0,r.kt)("p",null,'To make DORA even more actionable, there are some well-established benchmarks providing a simple lens to determine if you are performing at "Elite", "High", "Medium", or "Low" levels. '),(0,r.kt)("h2",{id:"why-is-dora-important"},"Why is DORA important?"),(0,r.kt)("p",null,"DORA metrics help a team or project measure and improve software development practices to continuously deliver reliable products with user values."),(0,r.kt)("h2",{id:"how-to-implement-dora-metrics-with-apache-devlake"},"How to implement DORA metrics with Apache DevLake?"),(0,r.kt)("p",null,"You can set up DORA metrics in DevLake in a few steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Install"),": ",(0,r.kt)("a",{parentName:"li",href:"https://devlake.apache.org/docs/GettingStarted"},"Getting Started")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Collect"),": Collect data via blueprint",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In the blueprint, select the data you wish to collect, and make sure you have selected the data required for DORA metrics"),(0,r.kt)("li",{parentName:"ul"},"Configure DORA-related transformation rules to define ",(0,r.kt)("inlineCode",{parentName:"li"},"deployments")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"incidents")),(0,r.kt)("li",{parentName:"ul"},"Select a sync frequency for your data, save and run the blueprint."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Report"),": DevLake provides a built-in DORA dashboard. See an example screenshot below or check out our ",(0,r.kt)("a",{parentName:"li",href:"https://grafana-lake.demo.devlake.io/grafana/d/qNo8_0M4z/dora?orgId=1"},"live demo"),".\n",(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/y1pUIsk.png",alt:"DORA Dashboard"}))),(0,r.kt)("p",null,"DevLake now supports Jenkins, GitHub Action and GitLabCI as data sources for ",(0,r.kt)("inlineCode",{parentName:"p"},"deployments")," data; Jira, GitHub issues, and TAPD as the sources for ",(0,r.kt)("inlineCode",{parentName:"p"},"incidents")," data; Github PRs, GitLab MRs as the sources for ",(0,r.kt)("inlineCode",{parentName:"p"},"changes")," data."),(0,r.kt)("p",null,"However, if your CI/CD tools are not listed on the ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/SupportedDataSources"},"Supported Data Sources")," page, DevLake provides incoming webhooks to push your ",(0,r.kt)("inlineCode",{parentName:"p"},"deployments")," data to DevLake. The webhook configuration doc can be found ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/UserManuals/ConfigUI/webhook/"},"here"),"."),(0,r.kt)("h2",{id:"a-real-world-example"},"A real-world example"),(0,r.kt)("p",null,"Let's walk through the DORA implementation process for a team with the following toolchain"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Code hosting: GitHub"),(0,r.kt)("li",{parentName:"ul"},"CI/CD: GitHub Actions + CircleCI"),(0,r.kt)("li",{parentName:"ul"},"Issue tracking: Jira")),(0,r.kt)("p",null,"Calculating DORA metrics requires three key entities: ",(0,r.kt)("strong",{parentName:"p"},"changes"),", ",(0,r.kt)("strong",{parentName:"p"},"deployments"),", and ",(0,r.kt)("strong",{parentName:"p"},"incidents"),". Their exact definition depends on a team's DevOps practice and varies team by team. For the team in this example, let's assume the following definition:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Changes: all pull requests in GitHub"),(0,r.kt)("li",{parentName:"ul"},'Deployments: GitHub action jobs that have "deploy" in their names and CircleCI\'s deployment jobs'),(0,r.kt)("li",{parentName:"ul"},"Incidents: Jira issues whose types are ",(0,r.kt)("inlineCode",{parentName:"li"},"Crash")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Incident"))),(0,r.kt)("p",null,"In the next section, we'll demonstrate how to configure DevLake to implement DORA metrics for the example team."),(0,r.kt)("h3",{id:"collect-github--jira-data-via-blueprint"},"Collect GitHub & Jira data via ",(0,r.kt)("inlineCode",{parentName:"h3"},"blueprint")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Visit the config-ui at ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:4000"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"blueprint"),', let\'s name it "Blueprint for DORA", add a Jira and a GitHub connection. Click ',(0,r.kt)("inlineCode",{parentName:"p"},"Next Step"),"\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/lpPRZ6v.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select Jira boards and GitHub repos to collect, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Next Step"),"\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/Ko38n6J.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("inlineCode",{parentName:"p"},"Add Transformation")," to configure for DORA metrics\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/Lhcu2DE.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To make it simple, fields with a ",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/rrLopFx.png",alt:null}),' label are DORA-related configurations for every data source. Via these fields, you can define what are "incidents" and "deployments" for each data source. '),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This team uses Jira issue types ",(0,r.kt)("inlineCode",{parentName:"li"},"Crash")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Incident"),' as "incident", so choose the two types in field "incident". Jira issues in these two types will be transformed to "incidents" in DevLake.'),(0,r.kt)("li",{parentName:"ul"},"This team uses the GitHub action jobs named ",(0,r.kt)("inlineCode",{parentName:"li"},"deploy")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"build-and-deploy")," to deploy, so type in ",(0,r.kt)("inlineCode",{parentName:"li"},"(?i)deploy"),' to match these jobs. These jobs will be transformed to "deployments" in DevLake.\n',(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/57sRc8L.png",alt:null}))),(0,r.kt)("p",{parentName:"li"},"After all the data connections have been configured, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Next Step"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Choose sync frequency, click 'Save and Run Now' to start data collection. The duration varies by data source and depends on the volume of data.\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/zPkfzGr.png",alt:null})))),(0,r.kt)("p",null,"For more details, please refer to our ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/UserManuals/ConfigUI/Tutorial"},"blueprint manuals"),"."),(0,r.kt)("h3",{id:"collect-circleci-data-via-webhook"},"Collect CircleCI data via ",(0,r.kt)("inlineCode",{parentName:"h3"},"webhook")),(0,r.kt)("p",null,"Using CircleCI as an example, we demonstrate how to actively push data to DevLake in case DevLake doesn't have a plugin that can pull data from your data source."),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Visit "Data Connections" page in config-ui and select "Issue/Deployment Incoming Webhook".')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Click "Add Incoming Webhook", give it a name, and click "Generate POST URL". DevLake will generate URLs that you can send JSON payloads to push ',(0,r.kt)("inlineCode",{parentName:"p"},"deployments")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"incidents")," data to Devlake. Copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"Deployment")," curl command.\n",(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3294100/191309840-460fbc9c-15a1-4b12-a510-9ed5ccd8f2b0.png",alt:"image"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3294100/195282257-00d7e741-9910-465b-82a6-9ffbc0d7ce43.png",alt:"image"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now head to your CircleCI's pipelines page in a new tab. Find your deployment pipeline and click ",(0,r.kt)("inlineCode",{parentName:"p"},"Configuration File"),"\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/XwPzmyk.png",alt:null}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Paste the curl command copied in step 8 to post ",(0,r.kt)("inlineCode",{parentName:"p"},"Deployments")," to DevLake. Below is an example of how it's configured in the CircleCI ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yml"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'version: 2.1\n\njobs:\n  build:\n    docker:\n      - image: cimg/base:stable\n    steps:\n      - checkout\n      - run:\n          name: "build"\n          command: |\n            echo Hello, World!\n\n  deploy:\n    docker:\n      - image: cimg/base:stable\n    steps:\n      - checkout\n      - run:\n          name: "deploy"\n          command: |\n            # record start before deploy\n            start_time=`date \'+%Y-%m-%dT%H:%M:%S%z\'`\n\n            # some deploy here ...\n            echo Hello, World!\n\n            # send request after deploy. Only repo_url and commit_sha are required fields.\n            curl https://sample-url.com/api/plugins/webhook/1/cicd_tasks -X \'POST\' -d "{\n              \\"repo_url\\":\\"$CIRCLE_REPOSITORY_URL\\",\n              \\"commit_sha\\":\\"$CIRCLE_SHA1\\",\n              \\"environment\\":\\"PRODUCTION\\",\n              \\"start_time\\":\\"$start_time\\"\n            }"\n\nworkflows:\n  build_and_deploy_workflow:\n    jobs:\n      - build\n      - deploy\n')),(0,r.kt)("p",{parentName:"li"},"You can find more about Deployment webhook's payload schema in this ",(0,r.kt)("a",{parentName:"p",href:"https://devlake.apache.org/docs/Plugins/webhook/#deployments"},"doc"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the modified CircleCI pipeline and you will find corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"deployments")," data in table.cicd_tasks in DevLake's database.\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/4g1Cb2B.png",alt:null})))),(0,r.kt)("h3",{id:"view-and-customize-devlakes-dora-dashboard"},"View and customize DevLake's DORA dashboard"),(0,r.kt)("p",null,"With all the data collected, DevLake's DORA dashboard is ready to deliver your DORA metrics and benchmark. You can find the DORA dashboard within the Grafana instance shipped with DevLake."),(0,r.kt)("p",null,"You can customize the DORA dashboard by editing the underlying SQL query of each panel."),(0,r.kt)("p",null,"For a breakdown of each metric's SQL query, please refer to metric docs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- [Deployment Frequency](https://devlake.apache.org/docs/Metrics/DeploymentFrequency)\n- [Lead Time for Changes](https://devlake.apache.org/docs/Metrics/LeadTimeForChanges)\n- [Median Time to Restore Service](https://devlake.apache.org/docs/Metrics/MTTR)\n- [Change Failure Rate](https://devlake.apache.org/docs/Metrics/CFR)\n")),(0,r.kt)("p",null,"If you aren't familiar with Grafana, please refer to our ",(0,r.kt)("a",{parentName:"p",href:"/zh/docs/UserManuals/Dashboards/GrafanaUserGuide"},"Grafana doc")),(0,r.kt)("br",null),(0,r.kt)("p",null,"\ud83c\udf89\ud83c\udf89\ud83c\udf89 Congratulations! Now you have your own DORA dashboard. "),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("br",null))}d.isMDXComponent=!0}}]);