"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[7331],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),c=i,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||r;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},61758:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const r={title:"Install via Kubernetes",description:"The steps to install Apache DevLake via Kubernetes\n",sidebar_position:2},l=void 0,o={unversionedId:"QuickStart/KubernetesSetup",id:"QuickStart/KubernetesSetup",title:"Install via Kubernetes",description:"The steps to install Apache DevLake via Kubernetes\n",source:"@site/docs/QuickStart/KubernetesSetup.md",sourceDirName:"QuickStart",slug:"/QuickStart/KubernetesSetup",permalink:"/zh/docs/QuickStart/KubernetesSetup",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/QuickStart/KubernetesSetup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Install via Kubernetes",description:"The steps to install Apache DevLake via Kubernetes\n",sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Install via Docker Compose",permalink:"/zh/docs/QuickStart/DockerComposeSetup"},next:{title:"Install via Helm",permalink:"/zh/docs/QuickStart/HelmSetup"}},p={},s=[{value:"Step-by-step guide",id:"step-by-step-guide",level:2},{value:"FAQ",id:"faq",level:2}],d={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We provide a sample ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake/blob/main/k8s-deploy.yaml"},"k8s-deploy.yaml")," to help deploy DevLake to Kubernetes"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-devlake/blob/main/k8s-deploy.yaml"},"k8s-deploy.yaml")," will create a namespace ",(0,i.kt)("inlineCode",{parentName:"p"},"devlake")," on your k8s cluster, and use ",(0,i.kt)("inlineCode",{parentName:"p"},"nodePort 30004")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"config-ui"),",  ",(0,i.kt)("inlineCode",{parentName:"p"},"nodePort 30002")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"grafana")," dashboards. If you would like to use a specific version of Apache DevLake, please update the image tag of ",(0,i.kt)("inlineCode",{parentName:"p"},"grafana"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"devlake")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"config-ui")," deployments."),(0,i.kt)("h2",{id:"step-by-step-guide"},"Step-by-step guide"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Download ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-devlake/blob/main/k8s-deploy.yaml"},"k8s-deploy.yaml")),(0,i.kt)("li",{parentName:"ol"},"Customize the settings (",(0,i.kt)("inlineCode",{parentName:"li"},"devlake-config")," config map):",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Settings shared between ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_ROOT_PASSWORD"),": set root password for ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_USER"),": shared between ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_PASSWORD"),": shared between ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_DATABASE"),": shared between ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")))),(0,i.kt)("li",{parentName:"ul"},"Settings used by ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_URL"),": set MySQL URL for ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"$HOST:$PORT")," format"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GF_SERVER_ROOT_URL"),": Public URL to the ",(0,i.kt)("inlineCode",{parentName:"li"},"grafana")))),(0,i.kt)("li",{parentName:"ul"},"Settings used by ",(0,i.kt)("inlineCode",{parentName:"li"},"config-ui"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GRAFANA_ENDPOINT"),": FQDN of grafana which can be reached within k8s cluster, normally you don't need to change it unless namespace was changed"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DEVLAKE_ENDPOINT"),": FQDN of devlake which can be reached within k8s cluster, normally you don't need to change it unless namespace was changed"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ADMIN_USER"),"/",(0,i.kt)("inlineCode",{parentName:"li"},"ADMIN_PASS"),": Not required, but highly recommended"))),(0,i.kt)("li",{parentName:"ul"},"Settings used by ",(0,i.kt)("inlineCode",{parentName:"li"},"devlake"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB_URL"),": update this value if  ",(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_USER"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_PASSWORD")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"MYSQL_DATABASE")," were changed"))))),(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"devlake")," deployment store its configuration in ",(0,i.kt)("inlineCode",{parentName:"li"},"/app/.env"),". In our sample yaml, we use ",(0,i.kt)("inlineCode",{parentName:"li"},"hostPath")," volume, so please make sure directory ",(0,i.kt)("inlineCode",{parentName:"li"},"/var/lib/devlake")," exists on your k8s workers, or employ other techniques to persist ",(0,i.kt)("inlineCode",{parentName:"li"},"/app/.env")," file. Please do NOT mount the entire ",(0,i.kt)("inlineCode",{parentName:"li"},"/app")," directory, because plugins are located in ",(0,i.kt)("inlineCode",{parentName:"li"},"/app/bin")," folder."),(0,i.kt)("li",{parentName:"ol"},"Finally, execute the following command and DevLake should be up and running:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f k8s-deploy.yaml\n")))),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Can I use a managed Cloud database service instead of running database in docker?\nYes, it only takes a few changes in the sample yaml file to make it happen. Below we'll use MySQL on AWS RDS as an example."),(0,i.kt)("li",{parentName:"ol"},"(Optional) Create a MySQL instance on AWS RDS following this ",(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html"},"doc"),", skip this step if you'd like to use an existing instance"),(0,i.kt)("li",{parentName:"ol"},"Remove the ",(0,i.kt)("inlineCode",{parentName:"li"},"mysql")," deployment and service sections from ",(0,i.kt)("inlineCode",{parentName:"li"},"k8s-deploy.yaml")),(0,i.kt)("li",{parentName:"ol"},"Update ",(0,i.kt)("inlineCode",{parentName:"li"},"devlake-config")," configmap according to your RDS instance setup:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"* `MYSQL_ROOT_PASSWORD`: remove this line\n* `MYSQL_USER`: use your RDS instance's master username\n* `MYSQL_PASSWORD`: use your RDS instance's password\n* `MYSQL_DATABASE`: use your RDS instance's DB name, you may need to create a database first with `CREATE DATABASE <DB name>;`\n* `MYSQL_URL`: set this for `grafana` in `$HOST:$PORT` format, where $HOST and $PORT should be your RDS instance's endpoint and port respectively\n* `DB_URL`: update the connection string with your RDS instance's info for `devlake`\n")))}m.isMDXComponent=!0}}]);