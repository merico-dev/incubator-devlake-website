"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"apache-devLake-codebase-walkthrough","metadata":{"permalink":"/blog/apache-devLake-codebase-walkthrough","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-06-Apache Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8/index.md","source":"@site/blog/2022-06-06-Apache Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8/index.md","title":"Apache Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8","description":"Apache DevLake\u662f\u4ec0\u4e48\uff1f","date":"2022-06-06T00:00:00.000Z","formattedDate":"June 6, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"codebase","permalink":"/blog/tags/codebase"}],"readingTime":8.336666666666666,"truncated":false,"authors":[{"name":"abeizn","title":"Apache Devlake Commiter","url":"https://github.com/abeizn","imageURL":"https://github.com/abeizn.png","key":"abeizn"}],"frontMatter":{"slug":"apache-devLake-codebase-walkthrough","title":"Apache Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8","authors":"abeizn","tags":["devlake","codebase"]},"nextItem":{"title":"\u5982\u4f55\u8d21\u732eissues","permalink":"/blog/how-to-contribute-to-issues"}},"content":"### Apache DevLake\u662f\u4ec0\u4e48\uff1f\\n\u7814\u53d1\u6570\u636e\u6563\u843d\u5728\u8f6f\u4ef6\u7814\u53d1\u751f\u547d\u5468\u671f\u7684\u4e0d\u540c\u9636\u6bb5\u3001\u4e0d\u540c\u5de5\u4f5c\u6d41\u3001\u4e0d\u540cDevOps\u5de5\u5177\u4e2d\uff0c\u4e14\u6807\u51c6\u5316\u7a0b\u5ea6\u4f4e\uff0c\u5bfc\u81f4\u6548\u80fd\u6570\u636e\u96be\u4ee5\u7559\u5b58\u3001\u6c47\u96c6\u5e76\u8f6c\u5316\u4e3a\u6709\u6548\u6d1e\u89c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u75db\u70b9\uff0c[Apache DevLake](https://github.com/apache/incubator-devlake) \u5e94\u8fd0\u800c\u751f\u3002Apache DevLake\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u7814\u53d1\u6570\u636e\u5e73\u53f0\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u81ea\u52a8\u5316\u3001\u4e00\u7ad9\u5f0f\u7684\u6570\u636e\u6536\u96c6\u3001\u5206\u6790\u4ee5\u53ca\u53ef\u89c6\u5316\u80fd\u529b\uff0c\u5e2e\u52a9\u7814\u53d1\u56e2\u961f\u66f4\u597d\u5730\u7406\u89e3\u5f00\u53d1\u8fc7\u7a0b\uff0c\u6316\u6398\u5173\u952e\u74f6\u9888\u4e0e\u63d0\u6548\u673a\u4f1a\u3002\\n\\n\\n### Apache DevLake\u67b6\u6784\u6982\u8ff0\\n![img](Architecture_Diagram.png)\\n<center>Apache DevLake \u67b6\u6784\u56fe</center>\\n<br/>\\n\\n- Config UI: \u4eba\u5982\u5176\u540d\uff0c\u914d\u7f6e\u7684\u53ef\u89c6\u5316\uff0c\u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u914d\u7f6e\u5de5\u4f5c\u3002\u901a\u8fc7Config UI\uff0c\u7528\u6237\u53ef\u4ee5\u5efa\u7acb\u6570\u636e\u6e90\u8fde\u63a5\uff0c\u5e76\u5b9e\u73b0\u6570\u636e\u7684\u6536\u96c6\u8303\u56f4\uff0c\u90e8\u5206\u6570\u636e\u7684\u8f6c\u6362\u89c4\u5219\uff0c\u4ee5\u53ca\u6536\u96c6\u9891\u7387\u7b49\u4efb\u52a1\u3002\\n- Api Sever\uff1aApache DevLake\u7684Api\u63a5\u53e3\uff0c\u662f\u524d\u7aef\u8c03\u7528\u540e\u7aef\u6570\u636e\u7684\u901a\u9053\u3002\\n- Runner\uff1aApache DevLake\u8fd0\u884c\u7684\u5e95\u5c42\u652f\u6491\u673a\u5236\u3002\\n- Plugins\uff1a\u5177\u4f53\u6267\u884c\u7684\u63d2\u4ef6\u4e1a\u52a1\uff0c\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u540e\u7aef\u6570\u636e\u6536\u96c6\u3001\u6269\u5c55\u548c\u8f6c\u6362\u7684\u5de5\u4f5c\u3002\u9664dbt\u63d2\u4ef6\u5916\u7684\u63d2\u4ef6\u4ea7\u51faApache DevLake\u7684\u9884\u7f6e\u6570\u636e\uff0c\u9884\u7f6e\u6570\u636e\u4e3b\u8981\u5305\u62ec\u4e09\u5c42\uff1b\\n    - raw layer\uff1a\u8d1f\u8d23\u50a8\u5b58\u6700\u539f\u59cb\u7684api response json\u3002\\n    - tool layer\uff1a\u6839\u636eraw layer\u63d0\u53d6\u51fa\u6b64\u63d2\u4ef6\u6240\u9700\u7684\u6570\u636e\u3002\\n    - domain layer\uff1a\u6839\u636etool layer\u5c42\u62bd\u8c61\u51fa\u5171\u6027\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u88ab\u4f7f\u7528\u5728Grafana\u56fe\u8868\u4e2d\uff0c\u7528\u4e8e\u591a\u79cd\u7814\u53d1\u6307\u6807\u7684\u5c55\u793a\u3002\\n- RDBS: \u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002\u76ee\u524dApache DavLake\u652f\u6301MySQL\u548cPostgreSQL\uff0c\u540e\u671f\u8fd8\u4f1a\u7ee7\u7eed\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u5e93\u3002\\n- Grafana Dashboards: \u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u524d\u7aef\u5c55\u793a\u5de5\u4f5c\u3002\u6839\u636eApache DevLake\u6536\u96c6\u7684\u6570\u636e\uff0c\u901a\u8fc7sql\u8bed\u53e5\u6765\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u4ea4\u4ed8\u6548\u7387\u3001\u8d28\u91cf\u3001\u6210\u672c\u3001\u80fd\u529b\u7b49\u5404\u79cd\u7814\u53d1\u6548\u80fd\u6307\u6807\u3002\\n\\n### \u76ee\u5f55\u7ed3\u6784Tree\\n```\\n\u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u251c\u2500\u2500 blueprints\\n\u2502\xa0\xa0 \u251c\u2500\u2500 docs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 domainlayer\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ping\\n\u2502\xa0\xa0 \u251c\u2500\u2500 pipelines\\n\u2502\xa0\xa0 \u251c\u2500\u2500 push\\n\u2502\xa0\xa0 \u251c\u2500\u2500 shared\\n\u2502\xa0\xa0 \u251c\u2500\u2500 task\\n\u2502\xa0\xa0 \u2514\u2500\u2500 version\\n\u251c\u2500\u2500 config\\n\u251c\u2500\u2500 config-ui\\n\u251c\u2500\u2500 devops\\n\u2502\xa0\xa0 \u2514\u2500\u2500 lake-builder\\n\u251c\u2500\u2500 e2e\\n\u251c\u2500\u2500 errors\\n\u251c\u2500\u2500 grafana\\n\u2502\xa0\xa0 \u251c\u2500\u2500 _archive\\n\u2502\xa0\xa0 \u251c\u2500\u2500 dashboards\\n\u2502\xa0\xa0 \u251c\u2500\u2500 img\\n\u2502\xa0\xa0 \u2514\u2500\u2500 provisioning\\n\u2502\xa0\xa0     \u251c\u2500\u2500 dashboards\\n\u2502\xa0\xa0     \u2514\u2500\u2500 datasources\\n\u251c\u2500\u2500 img\\n\u251c\u2500\u2500 logger\\n\u251c\u2500\u2500 logs\\n\u251c\u2500\u2500 migration\\n\u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u251c\u2500\u2500 common\\n\u2502\xa0\xa0 \u251c\u2500\u2500 domainlayer\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 code\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 crossdomain\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devops\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 didgen\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ticket\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 user\\n\u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u251c\u2500\u2500 plugins\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ae\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 core\\n\u2502\xa0\xa0 \u251c\u2500\u2500 dbt\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 feishu\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 apimodels\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 gitextractor\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 parser\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 store\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 github\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 utils\\n\u2502\xa0\xa0 \u251c\u2500\u2500 gitlab\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 e2e\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tables\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 impl\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 helper\\n\u2502\xa0\xa0 \u251c\u2500\u2500 jenkins\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 jira\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 apiv2models\\n\u2502\xa0\xa0 \u251c\u2500\u2500 refdiff\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 utils\\n\u2502\xa0\xa0 \u2514\u2500\u2500 tapd\\n\u2502\xa0\xa0     \u251c\u2500\u2500 api\\n\u2502\xa0\xa0     \u251c\u2500\u2500 models\\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0     \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0     \u2514\u2500\u2500 tasks\\n\u251c\u2500\u2500 releases\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.0\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.0-beta1\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.1\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.7.0\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.8.0\\n\u2502\xa0\xa0 \u2514\u2500\u2500 lake-v0.9.0\\n\u251c\u2500\u2500 runner\\n\u251c\u2500\u2500 scripts\\n\u251c\u2500\u2500 services\\n\u251c\u2500\u2500 test\\n\u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 task\\n\u2502\xa0\xa0 \u2514\u2500\u2500 example\\n\u251c\u2500\u2500 testhelper\\n\u251c\u2500\u2500 utils\\n\u251c\u2500\u2500 version\\n\u251c\u2500\u2500 worker\\n\u251c\u2500\u2500 Dockerfile\\n\u251c\u2500\u2500 docker-compose.yml\\n\u251c\u2500\u2500 docker-compose-temporal.yml\\n\u251c\u2500\u2500 k8s-deploy.yaml\\n\u251c\u2500\u2500 Makefile\\n\u2514\u2500\u2500 .env.exemple\\n   \\n\\n```\\n\\n### \u76ee\u5f55\u5bfc\u89c8\\n- \u540e\u7aef\u90e8\u5206\uff1a\\n  - config\uff1a\u5bf9.env\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u3001\u5199\u4ee5\u53ca\u4fee\u6539\u7684\u64cd\u4f5c\u3002\\n  - logger\uff1alog\u65e5\u5fd7\u7684level\u3001format\u7b49\u8bbe\u7f6e\u3002\\n  - errors\uff1aError\u7684\u5b9a\u4e49\u3002\\n  - utils\uff1a\u5de5\u5177\u5305\uff0c\u5b83\u5305\u542b\u4e00\u4e9b\u57fa\u7840\u901a\u7528\u7684\u51fd\u6570\u3002\\n  - runner\uff1a\u63d0\u4f9b\u57fa\u7840\u6267\u884c\u670d\u52a1\uff0c\u5305\u62ec\u6570\u636e\u5e93\uff0ccmd\uff0cpipelines\uff0ctasks\u4ee5\u53ca\u52a0\u8f7d\u7f16\u8bd1\u540e\u7684\u63d2\u4ef6\u7b49\u57fa\u7840\u670d\u52a1\u3002\\n  - models\uff1a\u5b9a\u4e49\u6846\u67b6\u7ea7\u522b\u7684\u5b9e\u4f53\u3002\\n    - common\uff1a\u57fa\u7840struct\u5b9a\u4e49\u3002\\n    - [domainlayer](https://devlake.apache.org/docs/DataModels/DevLakeDomainLayerSchema)\uff1a\u9886\u57df\u5c42\u662f\u6765\u81ea\u4e0d\u540c\u5de5\u5177\u6570\u636e\u7684\u901a\u7528\u62bd\u8c61\u3002\\n      - ticket\uff1aIssue Tracking\uff0c\u5373\u95ee\u9898\u8ddf\u8e2a\u9886\u57df\u3002\\n      - code\uff1a\u5305\u62ecSource Code\u6e90\u4ee3\u7801\u5173\u8054\u9886\u57df\u3002\u4ee5\u53caCode Review\u4ee3\u7801\u5ba1\u67e5\u9886\u57df\u3002\\n      - devops\uff1aCI/CD\uff0c\u5373\u6301\u7eed\u96c6\u6210\u3001\u6301\u7eed\u4ea4\u4ed8\u548c\u6301\u7eed\u90e8\u7f72\u9886\u57df\u3002\\n      - crossdomain\uff1a\u8de8\u57df\u5b9e\u4f53\uff0c\u8fd9\u4e9b\u5b9e\u4f53\u7528\u4e8e\u5173\u8054\u4e0d\u540c\u9886\u57df\u4e4b\u95f4\u7684\u5b9e\u4f53\uff0c\u8fd9\u662f\u5efa\u7acb\u5168\u65b9\u9762\u5206\u6790\u7684\u57fa\u7840\u3002\\n      - user\uff1a\u5bf9\u7528\u6237\u7684\u62bd\u8c61\u9886\u57df\uff0cuser\u4e5f\u5c5e\u4e8ecrossdomain\u8303\u7574\u3002\\n    - migrationscripts\uff1a\u521d\u59cb\u5316\u5e76\u66f4\u65b0\u6570\u636e\u5e93\u3002\\n  - plugins\uff1a\\n    - core\uff1a\u63d2\u4ef6\u901a\u7528\u63a5\u53e3\u7684\u5b9a\u4e49\u4ee5\u53ca\u7ba1\u7406\u3002\\n    - helper\uff1a\u63d2\u4ef6\u901a\u7528\u5de5\u5177\u7684\u96c6\u5408\uff0c\u63d0\u4f9b\u63d2\u4ef6\u6240\u9700\u8981\u7684\u8f85\u52a9\u7c7b\uff0c\u5982api\u6536\u96c6\uff0c\u6570\u636eETL\uff0c\u65f6\u95f4\u5904\u7406\u7b49\u3002\\n      - \u7f51\u7edc\u8bf7\u6c42Api Client\u5de5\u5177\u3002\\n      - \u6536\u96c6\u6570\u636eCollector\u8f85\u52a9\u7c7b\uff0c\u6211\u4eec\u57fa\u4e8eapi\u76f8\u540c\u7684\u5904\u7406\u6a21\u5f0f\uff0c\u7edf\u4e00\u4e86\u5e76\u53d1\uff0c\u9650\u901f\u4ee5\u53ca\u91cd\u8bd5\u7b49\u529f\u80fd\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u4e00\u5957\u901a\u7528\u7684\u6846\u67b6\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\\n      - \u63d0\u53d6\u6570\u636eExtractor\u8f85\u52a9\u7c7b\uff0c\u540c\u65f6\u4e5f\u5185\u5efa\u4e86\u6279\u91cf\u5904\u7406\u673a\u5236\u3002\\n      - \u8f6c\u6362\u6570\u636eConvertor\u8f85\u52a9\u7c7b\u3002\\n      - \u6570\u636e\u5e93\u5904\u7406\u5de5\u5177\u3002\\n      - \u65f6\u95f4\u5904\u7406\u5de5\u5177\u3002\\n      - \u51fd\u6570\u5de5\u5177\u3002\\n    - ae\uff1a\u5206\u6790\u5f15\u64ce\uff0c\u7528\u4e8e\u5bfc\u5165merico ae\u5206\u6790\u5f15\u64ce\u7684\u6570\u636e\u3002\\n    - feishu\uff1a\u6536\u96c6\u98de\u4e66\u6570\u636e\uff0c\u76ee\u524d\u4e3b\u8981\u662f\u83b7\u53d6\u4e00\u6bb5\u65f6\u95f4\u5185\u7ec4\u7ec7\u5185\u4f1a\u8bae\u4f7f\u7528\u7684top\u7528\u6237\u5217\u8868\u7684\u6570\u636e\u3002\\n    - github\uff1a\u6536\u96c6Github\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\uff08\u5176\u4ed6\u7684\u5927\u90e8\u5206\u63d2\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u5b9e\u73b0\u529f\u80fd\u548cgithub\u5927\u540c\u5c0f\u5f02\uff0c\u8fd9\u91cc\u4ee5github\u4e3a\u4f8b\u6765\u4ecb\u7ecd\uff09\u3002\\n      - github.go\uff1agithub\u542f\u52a8\u5165\u53e3\u3002\\n      - tasks\uff1a\u5177\u4f53\u6267\u884c\u76844\u7c7b\u4efb\u52a1\u3002\\n        - *_collector.go\uff1a\u6536\u96c6\u6570\u636e\u5230raw layer\u5c42\u3002\\n        - *_extractor.go\uff1a\u63d0\u53d6\u6240\u9700\u7684\u6570\u636e\u5230tool layer\u5c42\u3002\\n        - *_convertor.go\uff1a\u8f6c\u6362\u6240\u9700\u7684\u6570\u636e\u5230domain layer\u5c42\u3002\\n        - *_enricher.go\uff1adomain layer\u5c42\u66f4\u8fdb\u4e00\u6b65\u7684\u6570\u636e\u8ba1\u7b97\u8f6c\u6362\u3002\\n      - models\uff1a\u5b9a\u4e49github\u5bf9\u5e94\u5b9e\u4f53entity\u3002\\n      - api\uff1aapi\u63a5\u53e3\u3002\\n      - utils\uff1agithub\u63d0\u53d6\u7684\u4e00\u4e9b\u57fa\u672c\u901a\u7528\u51fd\u6570\u3002\\n    - gitextractor\uff1agit\u6570\u636e\u63d0\u53d6\u5de5\u5177\uff0c\u8be5\u63d2\u4ef6\u53ef\u4ee5\u4ece\u8fdc\u7aef\u6216\u672c\u5730git\u4ed3\u5e93\u63d0\u53d6commit\u548creference\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u6216csv\u6587\u4ef6\u3002\u7528\u6765\u4ee3\u66ffgithub\u63d2\u4ef6\u6536\u96c6commit\u4fe1\u606f\u4ee5\u51cf\u5c11api\u8bf7\u6c42\u7684\u6570\u91cf\uff0c\u63d0\u9ad8\u6536\u96c6\u901f\u5ea6\u3002\\n    - refdiff\uff1a\u5728\u5206\u6790\u5f00\u53d1\u5de5\u4f5c\u4ea7\u751f\u4ee3\u7801\u91cf\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u7248\u672c\u4e4b\u95f4\u7684diff\u3002\u672c\u63d2\u4ef6\u57fa\u4e8e\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684commits\u7236\u5b50\u5173\u7cfb\u4fe1\u606f\uff0c\u63d0\u4f9b\u4e86\u8ba1\u7b97ref(branch/tag)\u4e4b\u95f4\u76f8\u5deecommits\u5217\u8868\u7684\u80fd\u529b\u3002\\n    - gitlab\uff1a\u6536\u96c6Gitlab\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - jenkins\uff1a\u6536\u96c6jenkins\u7684build\u548cjob\u76f8\u5173\u6307\u6807\u3002\\n    - jira\uff1a\u6536\u96c6jira\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - tapd\uff1a\u6536\u96c6tapd\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - dbt\uff1a(data build tool)\u662f\u4e00\u6b3e\u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u8f6c\u6362\u5de5\u5177\uff0c\u80fd\u591f\u901a\u8fc7SQL\u5b9e\u73b0\u6570\u636e\u8f6c\u5316\uff0c\u5c06\u547d\u4ee4\u8f6c\u5316\u4e3a\u8868\u6216\u8005\u89c6\u56fe\uff0c\u63d0\u5347\u6570\u636e\u5206\u6790\u5e08\u7684\u5de5\u4f5c\u6548\u7387\u3002Apache DevLake\u589e\u52a0\u4e86dbt\u63d2\u4ef6\uff0c\u7528\u4e8e\u6570\u636e\u5b9a\u5236\u7684\u9700\u8981\u3002\\n  - services\uff1a\u521b\u5efa\u3001\u7ba1\u7406Apache DevLake\u5404\u79cd\u670d\u52a1\uff0c\u5305\u542bnotifications\u3001blueprints\u3001pipelines\u3001tasks\u3001plugins\u7b49\u3002\\n  - api\uff1a\u4f7f\u7528Gin\u6846\u67b6\u642d\u5efa\u7684\u4e00\u4e2a\u901a\u7528Apache DevLake API\u670d\u52a1\u3002\\n- \u524d\u7aef\u90e8\u5206\uff1a\\n  - congfig-ui\uff1a\u4e3b\u8981\u662fApache DevLake\u7684\u63d2\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684\u53ef\u89c6\u5316\u3002[\u4e00\u4e9b\u672f\u8bed\u7684\u89e3\u91ca](https://devlake.apache.org/docs/Glossary)\\n    - \u5e38\u89c4\u6a21\u5f0f \\n      - blueprints\u7684\u914d\u7f6e\u3002\\n      - data connections\u7684\u914d\u7f6e\u3002\\n      - transformation rules\u7684\u914d\u7f6e\u3002\\n    - \u9ad8\u7ea7\u6a21\u5f0f\uff1a\u4e3b\u8981\u662f\u901a\u8fc7json\u7684\u65b9\u5f0f\u6765\u8bf7\u6c42api\uff0c\u53ef\u9009\u62e9\u5bf9\u5e94\u7684\u63d2\u4ef6\uff0c\u5bf9\u5e94\u7684subtasks\uff0c\u4ee5\u53ca\u63d2\u4ef6\u6240\u9700\u8981\u7684\u5176\u4ed6\u4fe1\u606f\u3002\\n  - Grafana\uff1a\u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u524d\u7aef\u5c55\u793a\u5de5\u4f5c\u3002\u6839\u636e\u6536\u96c6\u7684\u6570\u636e\uff0c\u901a\u8fc7sql\u8bed\u53e5\u6765\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u5404\u79cd\u6570\u636e\u3002\u76ee\u524dsql\u4e3b\u8981\u7528domain layer\u5c42\u7684\u8868\u6765\u5b9e\u73b0\u901a\u7528\u6570\u636e\u5c55\u793a\u9700\u6c42\u3002\\n- migration\uff1a\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\u3002\\n  - migration\uff1a\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177migration\u7684\u5177\u4f53\u5b9e\u73b0\u3002\\n  - models/migrationscripts\uff1adomian layer\u5c42\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u811a\u672c\u3002\\n  - plugins/xxx/models/migrationscripts\uff1a\u63d2\u4ef6\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u811a\u672c\u3002\u4e3b\u8981\u662f_raw_\u548c_tool_\u5f00\u5934\u7684\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u3002\\n- \u6d4b\u8bd5\u90e8\u5206\uff1a\\n  - testhelper\u548cplugins\u4e0b\u7684*_test.go\u6587\u4ef6\uff1a\u5373\u5355\u5143\u6d4b\u8bd5\uff0c\u5c5e\u4e8e\u767d\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u9488\u5bf9\u76ee\u6807\u5bf9\u8c61\u81ea\u8eab\u7684\u903b\u8f91\uff0c\u6267\u884c\u8def\u5f84\u7684\u6b63\u786e\u6027\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u679c\u76ee\u6807\u5bf9\u8c61\u6709\u4f9d\u8d56\u5176\u5b83\u8d44\u6e90\u6216\u5bf9\u591f\u7528\uff0c\u91c7\u7528\u6ce8\u5165\u6216\u8005 mock \u7b49\u65b9\u5f0f\u8fdb\u884c\u6a21\u62df\uff0c\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5236\u9020\u4e00\u4e9b\u96be\u4ee5\u590d\u73b0\u7684\u6781\u7aef\u60c5\u51b5\u3002\\n  - test\uff1a\u96c6\u6210\u6d4b\u8bd5\uff0c\u7070\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u6240\u6709\u6a21\u5757\u6309\u7167\u8bbe\u8ba1\u8981\u6c42\uff08\u5982\u6839\u636e\u7ed3\u6784\u56fe\uff09\u7ec4\u88c5\u6210\u4e3a\u5b50\u7cfb\u7edf\u6216\u7cfb\u7edf\uff0c\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u3002\\n  - e2e\uff1a \u7aef\u5230\u7aef\u6d4b\u8bd5\uff0c\u5c5e\u4e8e\u9ed1\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u76f8\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u66f4\u6ce8\u91cd\u4e8e\u76ee\u6807\u81ea\u8eab\uff0ce2e\u66f4\u91cd\u89c6\u76ee\u6807\u4e0e\u7cfb\u7edf\u5176\u5b83\u90e8\u5206\u4e92\u52a8\u7684\u6574\u4f53\u6b63\u786e\u6027\uff0c\u76f8\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u7740\u91cd\u903b\u8f91\u6d4b\u8bd5\uff0ce2e\u4fa7\u91cd\u4e8e\u8f93\u51fa\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\\n- \u7f16\u8bd1\uff0c\u53d1\u5e03\u90e8\u5206\uff1a\\n  - devops/lake-builder\uff1a mericodev/lake-builder\u7684docker\u6784\u5efa\u3002\\n  - Dockerfile\uff1a\u4e3b\u8981\u7528\u4e8e\u6784\u5efadevlake\u955c\u50cf\u3002\\n  - docker-compose.yml\uff1a\u662f\u7528\u4e8e\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668Docker\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528YML\u6587\u4ef6\u6765\u914d\u7f6eApache DevLake\u6240\u9700\u8981\u7684\u670d\u52a1\u7ec4\u4ef6\u3002\\n  - docker-compose-temporal.yml\uff1aTemporal\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\u7f16\u6392\u5e73\u53f0\uff0c\u4ee5\u5206\u5e03\u5f0f\u7684\u6a21\u5f0f\u6765\u90e8\u7f72Apache DevLake\uff0c\u76ee\u524d\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\\n  - worker\uff1aTemporal\u5206\u5e03\u5f0f\u90e8\u7f72\u5f62\u5f0f\u4e2d\u7684worker\u5b9e\u73b0\uff0c\u76ee\u524d\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\\n  - k8s-deploy.yaml\uff1aKubernetes\u662f\u4e00\u4e2a\u53ef\u79fb\u690d\u3001\u53ef\u6269\u5c55\u7684\u5f00\u6e90\u5e73\u53f0\uff0c\u7528\u4e8e\u7ba1\u7406\u5bb9\u5668\u5316\u7684\u5de5\u4f5c\u8d1f\u8f7d\u548c\u670d\u52a1\uff0c\u53ef\u4fc3\u8fdb\u58f0\u660e\u5f0f\u914d\u7f6e\u548c\u81ea\u52a8\u5316\u3002\u76ee\u524dApache DevLake\u5df2\u652f\u6301\u5728k8s\u96c6\u7fa4\u4e0a\u90e8\u7f72\u3002\\n  - Makefile\uff1a\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u7b49\u89c4\u5219\u3002\\n  - releases\uff1aApache DevLake\u5386\u53f2release\u7248\u672c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ecdocker-compose.yml\u548cenv.example\u3002\\n  - scripts\uff1ashell\u811a\u672c\uff0c\u5305\u62ec\u7f16\u8bd1plugins\u811a\u672c\u3002\\n- \u5176\u4ed6\uff1a\\n  - img\uff1alogo\u3001\u793e\u533a\u5fae\u4fe1\u4e8c\u7ef4\u7801\u7b49\u56fe\u50cf\u4fe1\u606f\u3002\\n  - version\uff1a\u5b9e\u73b0\u7248\u672c\u663e\u793a\u7684\u652f\u6301\uff0c\u5728\u6b63\u5f0f\u7684\u955c\u50cf\u4e2d\u4f1a\u663e\u793a\u5bf9\u5e94release\u7684\u7248\u672c\u3002\\n  - .env.exemple\uff1a\u914d\u7f6e\u6587\u4ef6\u5b9e\u4f8b\uff0c\u5305\u62ecDB URL, LOG\u4ee5\u53ca\u5404\u63d2\u4ef6\u7684\u914d\u7f6e\u793a\u4f8b\u4fe1\u606f\u3002\\n\\n### \u5982\u4f55\u8054\u7cfb\u6211\u4eec\\n- Github\u5730\u5740\uff1ahttps://github.com/apache/incubator-devlake\\n- \u5b98\u7f51\u5730\u5740\uff1ahttps://devlake.apache.org/\\n- <a href=\\"https://join.slack.com/t/devlake-io/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw\\" target=\\"_blank\\">Slack</a>: \u901a\u8fc7Slack\u8054\u7cfb\\n- \u5fae\u4fe1\u8054\u7cfb:\\n![img](wechat_community_barcode.png)"},{"id":"how-to-contribute-to-issues","metadata":{"permalink":"/blog/how-to-contribute-to-issues","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-20-\u5982\u4f55\u8d21\u732eissues/index.md","source":"@site/blog/2022-05-20-\u5982\u4f55\u8d21\u732eissues/index.md","title":"\u5982\u4f55\u8d21\u732eissues","description":"\u4e0a\u5468(2022-05-12)\uff0c\u6211\u4eec\u4ee5\u5148\u5230\u5148\u5f97\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u5217\u51fa\u4e86\u4e24\u4e2a\\"good first issue\\"\u3002","date":"2022-05-20T00:00:00.000Z","formattedDate":"May 20, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"apache","permalink":"/blog/tags/apache"}],"readingTime":1.46,"truncated":false,"authors":[{"name":"Klesh Wong","title":"Apache DevLake PPMC","url":"https://kleshwong.com","imageURL":"https://github.com/klesh.png","key":"klesh"}],"frontMatter":{"slug":"how-to-contribute-to-issues","title":"\u5982\u4f55\u8d21\u732eissues","authors":"klesh","tags":["devlake","apache"]},"prevItem":{"title":"Apache Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8","permalink":"/blog/apache-devLake-codebase-walkthrough"},"nextItem":{"title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","permalink":"/blog/apache-welcomes-devlake"}},"content":"\u4e0a\u5468(2022-05-12)\uff0c\u6211\u4eec\u4ee5\u5148\u5230\u5148\u5f97\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u5217\u51fa\u4e86\u4e24\u4e2a\\"good first issue\\"\u3002\\n\u8fd9\u5f88\u6709\u8da3\uff0c\u5b83\u4eec\u51e0\u4e4e\u7acb\u523b\u5c31\u88ab\u62ff\u8d70\u4e86......\\n\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u6709\u5174\u8da3\u4f46\u6ca1\u6709\u5f97\u5230\u7684\u4eba\u6765\u8bf4\u53ef\u80fd\u5c31\u4e0d\u90a3\u4e48\u6709\u8da3\u4e86\u3002\\n\\n### \u6240\u4ee5...\\n\\n\u6211\u4eec\u51b3\u5b9a\uff0c\u4e0d\u518d\u6709\u7ade\u4e89\uff0c\u4f60\u53ef\u4ee5\u4ece\u6211\u4eec\u7684github issue pages\u4e2d\u6311\u9009\u4f60\u559c\u6b22\u7684issue\u3002\u5982\u679c\u6ca1\u6709\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u3002\\n\u6211\u4eec\u6bd5\u7adf\u662f\u793e\u533a\uff01\\n\\n### \u600e\u4e48\u505a\u5462\uff1f\u8fd9\u5f88\u7b80\u5355!\\n\\n\u8fdb\u5165\u6211\u4eec\u7684[\u95ee\u9898\u9875\u9762](https://github.com/apache/incubator-devlake/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\uff0c\u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u3002\u6211\u4eec\u6240\u6709\u7684Good First Issue\u90fd\u5217\u5728\u8fd9\u91cc!\\n![good first issue](../../img/community/screenshots/issue_page_screenshot.png)\\n\\n- \u9996\u5148\uff0c\u5bfb\u627e\u73b0\u6709\u7684issues\uff0c\u627e\u5230\u4e00\u4e2a\u4f60\u559c\u6b22\u7684\u3002\\n  \u4f60\u53ef\u4ee5\u901a\u8fc7\u8bc4\u8bba\\"I\'ll take it!\\"\u6765\u9884\u8ba2\u5b83\u3002\\n  \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u5199\u4e00\u4efd\u201c\u653b\u7565\u201d\uff0c\u4ee5\u5c55\u793a\u4f60\u5bf9\u95ee\u9898\u7684\u7406\u89e3\u548c\u4f60\u5c06\u91c7\u53d6\u4ec0\u4e48\u6837\u7684\u6b65\u9aa4\u6765\u89e3\u51b3\u8fd9\u4e2aissue\uff0c\u7136\u540e\u5f00\u59cbCoding\u3002\\n\\n- \u5982\u679c\u6ca1\u6709GFI\u4e86\u600e\u4e48\u529e\uff1f\u521b\u9020\u4f60\u81ea\u5df1\u7684issue! \u73b0\u5728\uff0c\u901a\u8fc7\u67e5\u770b\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u3002\\n  \u4f60\u80af\u5b9a\u80fd\u53d1\u73b0\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u6587\u6863\u3001\u5355\u5143\u6d4b\u8bd5\uff0c\u751a\u81f3\u662f\u9519\u5b57\u3002\\n  \u628a\u4f60\u89c9\u5f97\u4e0d\u5bf9\u7684\u5730\u65b9\u63d0\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u9a8c\u8bc1\u5b83\u662f\u5426\u5fc5\u8981\uff0c\\n  \u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cbCoding\u4e86\u3002\\n\\n- \u6700\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4e3a\u4ec0\u4e48\u8981\u8d39\u5c3d\u5fc3\u601d\u4e3a\u4f60\u5199\u4ee3\u7801\uff1f\\n  \u4e0d\u4e0d\u4e0d\uff0c\u4f60\u4e0d\u662f\u4e3a\u6211\u4eec\u5199\u4ee3\u7801\uff0c\u4f60\u662f\u4e3a\u793e\u533a\u91cc\u7684\u6bcf\u4e2a\u4eba\u5199\u4ee3\u7801\uff0c\u4f60\u662f\u4e3a\u81ea\u5df1\u5199\u4ee3\u7801\u3002\\n  \u4e3a\u4e86\u63d0\u9ad8\u4f60\u7684\u6280\u80fd\uff0c\u4e3a\u4e86\u5b66\u4e60\u5982\u4f55\u4e0e\u4ed6\u4eba\u5408\u4f5c\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u505a\u51fa\u91cd\u5927\u8d21\u732e\u7684\u4eba\uff0c\\n  \u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2aApache Committer\u7684\u5e2d\u4f4d\uff0c\u751a\u81f3\u662fPPMC\uff01\\n\\n### \u5c31\u8fd9\u4e9b\u4e86\uff0c\u6709\u4efb\u4f55\u95ee\u9898\u8bf7\u968f\u65f6\u63d0\u51fa\u3002\u7f16\u7801\u5feb\u4e50\uff01"},{"id":"apache-welcomes-devlake","metadata":{"permalink":"/blog/apache-welcomes-devlake","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-18-apache-welcomes-devLake/index.md","source":"@site/blog/2022-05-18-apache-welcomes-devLake/index.md","title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","description":"We are excited to share today that the Apache Software Foundation (ASF) voted to make DevLake an officially supported project of the Apache Incubator.","date":"2022-05-18T00:00:00.000Z","formattedDate":"May 18, 2022","tags":[{"label":"Devlake","permalink":"/blog/tags/devlake"},{"label":"Apache","permalink":"/blog/tags/apache"}],"readingTime":1.64,"truncated":true,"authors":[{"name":"Maxim Wheatley","title":"Apache DevLake PPMC","url":"https://github.com/MaximDub","imageURL":"https://github.com/MaximDub.png","key":"maxim"}],"frontMatter":{"slug":"apache-welcomes-devlake","title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","authors":"maxim","tags":["Devlake","Apache"]},"prevItem":{"title":"\u5982\u4f55\u8d21\u732eissues","permalink":"/blog/how-to-contribute-to-issues"},"nextItem":{"title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","permalink":"/blog/how-apache-devlake-runs"}},"content":"We are excited to share today that the Apache Software Foundation (ASF) voted to make DevLake an officially supported project of the Apache Incubator.\\n\\n\\n\\n### What is DevLake?\\n\\nLaunched in December of 2021, [Apache DevLake](https://github.com/apache/incubator-devlake) is an open-source dev data platform that ingests, analyzes, and visualizes the fragmented data in developer tools. \\n\\nSoftware development is complex, requiring many tools and processes, and as a result creates a storm of data scattered across tools in many formats. This makes it difficult to organize, query, and make sense of. We built Apache DevLake, to make it easy to make sense of this rich data and to translate it into actionable insights.\\n\\n\\n\x3c!--truncate--\x3e\\n\\n\\n### Apache DevLake\'s key features:\\n\\n- DevOps data collection across software development lifecycle (SDLC) to connect data islands\\n- Standardized data models with out-of-the-box metrics and customizable dashboards\\n- Flexible plugin system for user-defined data integration and transformation\\n\\nBelow is the architecture of Apache DevLake: \\n![architecture](0.11-architecture-diagram.jpg)\\n\\n\\n### Why join Apache Incubator?\\n\\nFirst and foremost, we firmly believe in Apache\'s principle of \\"Community over Code\\" and [\\"The Apache Way\\"](https://www.apache.org/theapacheway/index.html). We look forward to building a vibrant, inclusive, and diverse community under the guidance of our mentors through the incubator journey.\\n\\nWe also feel that the Apache community has one of the strongest ecosystems when it comes to data-oriented open-source projects. \\n\\nLast and not least, the support and enthusiasm of the Apache community and mentors made it clear to us that this would be a place where we can truly evolve and nurture Apache DevLake.\\n\\nIn the months leading up to DevLake\'s acceptance, our mentors provided guidance and suggestions instrumental to making this important moment a reality. We want to take this opportunity to thank and acknowledge them: \\n\\n\\n\\n- **[Willem Ning Jiang](https://github.com/WillemJiang)**: Apache DevLake Champion; ASF Member & Board Director\\n- **[Liang Zhang](https://github.com/terrymanu)**: Founder & CEO of SphereEx; ASF Member, Founder & PMC Chair of Apache ShardingSphere\\n- **[Lidong Dai](https://github.com/dailidong)**: ASF Member; Apache DolphinScheduler PMC Chair\\n- **[Sijie Guo](https://github.com/sijie)**: ASF Member, PMC member of Apache Pulsar; Founder & CEO of StreamNative\\n\\n- **[Felix Cheung](https://github.com/felixcheung)**: ASF Member, PMC on Spark, Superset, Yunikorn, Zeppelin, Pinot, and Incubator. SVP of Engineering at SafeGraph.\\n\\n- **[Jean-Baptiste Onofr\xe9](https://github.com/jbonofre)**: ASF Member, Karaf PMC Chair, PMC on ActiveMQ, Archiva, Aries, Beam, Brooklyn, Camel, Carbondata, Felix, Incubator, and [many more](http://people.apache.org/committer-index.html).\\n\\n\\n\\n### Apache DevLake Future Roadmap\\n\\n- Enhance system scalability and performance in large-scale data scenarios.\\n- Integrate more data sources and tools (JIRA, GitHub, GitLab, and Jenkins are already supported.)\\n- Enable support for OLAP databases, providing users with more choices.\\n- Provide more scenario-specific, out-of-the-box dashboards and templates reflecting best practices and well-known methodologies to improve usability.\\n\\n\\n\\n### Join us! \\n\\nWe invite developers and those passionate about data-driven engineering to \'dive into the lake\' with us, and welcome contributions of all kinds. \\nJoin us on Slack and at our weekly open source community meetups\ud83e\udd73\\n\\n**Apache DevLake (Incubating) Links:**\\n\\n- GitHub:  https://github.com/apache/incubator-devlake\\n- Official Website: https://devlake.apache.org/\\n- Slack:   https://join.slack.com/t/devlake-io/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw\\n- Podling Website\uff1ahttps://incubator.apache.org/projects/devlake.html"},{"id":"how-apache-devlake-runs","metadata":{"permalink":"/blog/how-apache-devlake-runs","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-18-how-apache-devlake-runs/index.md","source":"@site/blog/2022-05-18-how-apache-devlake-runs/index.md","title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","description":"Apache DevLake \u662f\u4e00\u4e2aDevOps\u6570\u636e\u6536\u96c6\u548c\u6574\u5408\u5de5\u5177\uff0c\u901a\u8fc7 Grafana \u4e3a\u5f00\u53d1\u56e2\u961f\u5448\u73b0\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u6570\u636e\uff0c\u8ba9\u56e2\u961f\u80fd\u591f\u4ee5\u6570\u636e\u4e3a\u9a71\u52a8\u6539\u8fdb\u5f00\u53d1\u6d41\u7a0b\u3002","date":"2022-05-18T00:00:00.000Z","formattedDate":"May 18, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"apache","permalink":"/blog/tags/apache"}],"readingTime":4.8,"truncated":true,"authors":[{"name":"Warren Chen","title":"Apache DevLake PPMC","url":"https://github.com/warren830","imageURL":"https://github.com/warren830.png","key":"warren"}],"frontMatter":{"slug":"how-apache-devlake-runs","title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","authors":"warren","tags":["devlake","apache"]},"prevItem":{"title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","permalink":"/blog/apache-welcomes-devlake"},"nextItem":{"title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","permalink":"/blog/deadlock-caused-by-using-ants"}},"content":"[Apache DevLake](https://github.com/apache/incubator-devlake) \u662f\u4e00\u4e2aDevOps\u6570\u636e\u6536\u96c6\u548c\u6574\u5408\u5de5\u5177\uff0c\u901a\u8fc7 Grafana \u4e3a\u5f00\u53d1\u56e2\u961f\u5448\u73b0\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u6570\u636e\uff0c\u8ba9\u56e2\u961f\u80fd\u591f\u4ee5\u6570\u636e\u4e3a\u9a71\u52a8\u6539\u8fdb\u5f00\u53d1\u6d41\u7a0b\u3002\\n\\n### Apache DevLake \u67b6\u6784\u6982\u8ff0\\n- \u5de6\u8fb9\u662f[\u53ef\u96c6\u6210\u7684DevOps\u6570\u636e\u63d2\u4ef6](https://devlake.apache.org/docs/DataModels/DataSupport)\uff0c\u76ee\u524d\u5df2\u6709\u7684\u63d2\u4ef6\u5305\u62ec Github\uff0cGitlab\uff0cJIRA\uff0cJenkins\uff0cTapd\uff0cFeishu \u4ee5\u53ca\u601d\u7801\u9038\u4e3b\u6253\u7684\u4ee3\u7801\u5206\u6790\u5f15\u64ce\\n- \u4e2d\u95f4\u662f\u4e3b\u4f53\u6846\u67b6\uff0c\u901a\u8fc7\u4e3b\u4f53\u6846\u67b6\u8fd0\u884c\u63d2\u4ef6\u4e2d\u7684\u5b50\u4efb\u52a1\uff0c\u5b8c\u6210\u6570\u636e\u7684\u6536\u96c6\uff0c\u6269\u5c55\uff0c\u5e76\u8f6c\u6362\u5230\u9886\u57df\u5c42\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 config-ui \u6216\u8005 api \u8c03\u7528\u7684\u5f62\u5f0f\u6765\u89e6\u53d1\u4efb\u52a1\\n- RMDBS \u76ee\u524d\u652f\u6301 Mysql \u548c PostgreSQL\uff0c\u540e\u671f\u8fd8\u4f1a\u7ee7\u7eed\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u5e93\\n- Grafana \u53ef\u4ee5\u901a\u8fc7sql\u8bed\u53e5\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u5404\u79cd\u6570\u636e\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.001.png)\\n\\n> \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8be6\u7ec6\u804a\u4e00\u804a\u7cfb\u7edf\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n### \u7cfb\u7edf\u542f\u52a8\\n\\n\u5728\u6211\u4eec\u7684 golang \u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\uff0c\u9996\u5148\u4f1a\u81ea\u52a8\u8c03\u7528\u5404\u4e2a package \u7684 init() \u65b9\u6cd5\uff0c\u6211\u4eec\u4e3b\u8981\u770b\u770bservices \u5305\u7684\u8f7d\u5165\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u8be6\u7ec6\u6ce8\u91ca\uff1a\\n\\n```go\\nfunc init() {\\nvar err error\\n// \u83b7\u53d6\u914d\u7f6e\u4fe1\u606f\\ncfg = config.GetConfig()\\n// \u83b7\u53d6\u5230\u6570\u636e\u5e93\\ndb, err = runner.NewGormDb(cfg, logger.Global.Nested(\\"db\\"))\\n// \u914d\u7f6e\u65f6\u533a\\nlocation := cron.WithLocation(time.UTC)\\n// \u521b\u5efa\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u5668\\ncronManager = cron.New(location)\\nif err != nil {\\npanic(err)\\n}\\n// \u521d\u59cb\u5316\u6570\u636e\u8fc1\u79fb\\nmigration.Init(db)\\n// \u6ce8\u518c\u6846\u67b6\u7684\u6570\u636e\u8fc1\u79fb\u811a\u672c\\nmigrationscripts.RegisterAll()\\n// \u8f7d\u5165\u63d2\u4ef6\uff0c\u4ececfg.GetString(\\"PLUGIN_DIR\\")\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u5939\u4e2d\u8f7d\u5165\u6240\u6709.so\u6587\u4ef6\uff0c\u5728LoadPlugins\u65b9\u6cd5\u4e2d\uff0c\u5177\u4f53\u6765\u8bb2\uff0c\u901a\u8fc7\u8c03\u7528runner.LoadPlugins\u5c06pluginName:PluginMeta\u952e\u503c\u5bf9\u5b58\u5165\u5230core.plugins\u4e2d\\nerr = runner.LoadPlugins(\\ncfg.GetString(\\"PLUGIN_DIR\\"),\\ncfg,\\nlogger.Global.Nested(\\"plugin\\"),\\ndb,\\n)\\nif err != nil {\\npanic(err)\\n}\\n// \u6267\u884c\u6570\u636e\u8fc1\u79fb\u811a\u672c\uff0c\u5b8c\u6210\u6570\u636e\u5e93\u6846\u67b6\u5c42\u5404\u4e2a\u8868\u7684\u521d\u59cb\u5316\\nerr = migration.Execute(context.Background())\\nif err != nil {\\npanic(err)\\n}\\n\\n// call service init\\npipelineServiceInit()\\n}\\n\\n```\\n### DevLake\u7684\u4efb\u52a1\u6267\u884c\u539f\u7406\\n\\n**Pipeline\u7684\u8fd0\u884c\u6d41\u7a0b**\\n\\n\u5728\u8bb2\u89e3Pipeline\u6d41\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u89e3\u91ca\u4e00\u4e0b[Blueprint](https://devlake.apache.org/docs/Glossary#blueprints)\u3002\\n\\nBlueprint\u662f\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5305\u542b\u4e86\u9700\u8981\u6267\u884c\u7684\u5b50\u4efb\u52a1\u4ee5\u53ca\u6267\u884c\u8ba1\u5212\u3002Blueprint \u7684\u6bcf\u4e00\u6b21\u6267\u884c\u8bb0\u5f55\u662f\u4e00\u6761Historical Run\uff08\u4e5f\u79f0\u4e3a Pipeline\uff09\uff0c\u4ee3\u8868 DevLake \u4e00\u6b21\u89e6\u53d1\uff0c\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u63d2\u4ef6\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u636e\u6536\u96c6\u8f6c\u6362\u7684\u4efb\u52a1\u3002\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.002.png)\\n\\n\u4ee5\u4e0b\u662f Pipeline \u8fd0\u884c\u6d41\u7a0b\u56fe\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.003.png)\\n\\n\u4e00\u4e2apipeline\u5305\u542b\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4tasks\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e00\u7cfb\u5217\u4efb\u52a1\u6309\u9884\u8bbe\u987a\u5e8f\u6267\u884c\u3002\u5982\u679c\u4e0b\u56fe\u4e2d\u7684 Stage3 \u7684\u63d2\u4ef6\u9700\u8981\u4f9d\u8d56\u5176\u4ed6\u63d2\u4ef6\u51c6\u5907\u6570\u636e\uff08\u4f8b\u5982 refdiff \u7684\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 gitextractor \u548c github\uff0c\u6570\u636e\u6e90\u4e0e\u63d2\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u770b[\u6587\u6863](https://devlake.apache.org/docs/DataModels/DataSupport)\uff09\uff0c\u90a3\u4e48 Stage 3 \u5f00\u59cb\u6267\u884c\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u5176\u4f9d\u8d56\u9879\u5df2\u5728 Stage1 \u548c Stage2 \u6267\u884c\u5b8c\u6210\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.004.png)\\n\\n**Task\u7684\u8fd0\u884c\u6d41\u7a0b**\\n\\n\u5728stage1\uff0cstage2\uff0cstage3\u4e2d\u7684\u5404\u63d2\u4ef6\u4efb\u52a1\u90fd\u662f\u5e76\u884c\u6267\u884c\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.005.png)\\n\\n**\u63a5\u4e0b\u6765\u5c31\u662f\u987a\u5e8f\u6267\u884c\u63d2\u4ef6\u4e2d\u7684\u5b50\u4efb\u52a1**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.006.png)\\n\\n1. RunTask \u4e4b\u524d\u7684\u5de5\u4f5c\u90fd\u662f\u5728\u51c6\u5907 RunTask \u65b9\u6cd5\u9700\u8981\u7684\u53c2\u6570\uff0c\u6bd4\u5982 logger\uff0cdb\uff0ccontext \u7b49\u7b49\u3002\\n2. RunTask \u65b9\u6cd5\u4e2d\u4e3b\u8981\u662f\u5bf9\u6570\u636e\u5e93\u4e2d\u7684tasks\u8fdb\u884c\u72b6\u6001\u66f4\u65b0\uff0c\u540c\u65f6\uff0c\u51c6\u5907\u8fd0\u884c\u63d2\u4ef6\u4efb\u52a1\u7684 options\uff08\u628a\u4ece config-ui \u4f20\u8fc7\u6765\u7684 json \u8f6c\u6210 map \u4f20\u5230 RunPluginTask \u4e2d\uff09\\n3. RunPluginTask \u9996\u5148\u901a\u8fc7 core.GetPlugin(pluginName) \u83b7\u53d6\u5230\u5bf9\u5e94 [PluginMeta](#pm)\uff0c\u7136\u540e\u901a\u8fc7 PluginMeta \u83b7\u53d6\u5230 [PluginTask](#pt)\uff0c\u518d\u6267\u884c RunPluginSubTasks\\n\\n**\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u5b50\u4efb\u52a1\u7684\u8fd0\u884c\u6d41\u7a0b\uff08\u6d89\u53ca\u5230\u7684 interface \u53ca func \u4f1a\u5728[\u4e0b\u4e00\u8282](#DevLake\u4e2d\u7684\u91cd\u8981\u63a5\u53e3)\u8be6\u7ec6\u9610\u8ff0\uff09**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.007.png)\\n\\n1. \u901a\u8fc7\u8c03\u7528SubTaskMetas()\u83b7\u53d6\u5230\u6240\u6709\u63d2\u4ef6\u6240\u6709\u7684\u53ef\u7528\u5b50\u4efb\u52a1[subtaskMeta](#stm)\\n2. \u901a\u8fc7`options[\\"tasks\\"]`\u4ee5\u53casubtaskMeta\u7ec4\u5efa\u9700\u8981\u6267\u884c\u7684\u5b50\u4efb\u52a1\u96c6\u5408subtaskMetas\\n3. \u8ba1\u7b97\u603b\u5171\u591a\u5c11\u4e2a\u5b50\u4efb\u52a1\\n4. \u901a\u8fc7`helper.NewDefaultTaskContext`\u6784\u5efa[taskCtx](#tc)\\n5. \u8c03\u7528`pluginTask.PrepareTaskData`\u6784\u5efa[taskData](#td)\uff0c\\n6. \u63a5\u4e0b\u6765\u8fed\u4ee3subtaskMetas\u91cc\u9762\u7684\u6240\u6709\u5b50\u4efb\u52a1\\n    1. \u901a\u8fc7`taskCtx.SubTaskContext(subtaskMeta.Name)`\u83b7\u53d6\u5230\u5b50\u4efb\u52a1\u7684[subtaskCtx](#sc)\\n    2. \u6267\u884c[`subtaskMeta.EntryPoint(subtaskCtx)`](#step)\\n### DevLake\u4e2d\u7684\u91cd\u8981\u63a5\u53e3\\n1. <a id=\\"pm\\">PluginMeta</a>: \u5305\u542b\u4e86\u63d2\u4ef6\u6700\u57fa\u672c\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6240\u6709\u63d2\u4ef6\u90fd\u9700\u8981\u5b9e\u73b0\uff0c\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\u5b58\u5728core.plugins\u4e2d\uff0c\u5728\u6267\u884c\u63d2\u4ef6\u4efb\u52a1\u7684\u65f6\u5019\u901a\u8fc7core.GetPlugin\u83b7\u53d6\\n\\n```go\\ntype PluginMeta interface {\\n   Description() string\\n   //PkgPath information will be lost when compiled as plugin(.so), this func will return that info\\n   RootPkgPath() string\\n}\\n\\n```\\n2. <a id=\\"pt\\">PluginTask</a>: \u901a\u8fc7PluginMeta\u83b7\u53d6\uff0c\u63d2\u4ef6\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0cFramework\u5c31\u80fd\u76f4\u63a5\u8fd0\u884c\u5b50\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u6254\u7ed9\u63d2\u4ef6\u81ea\u5df1\u53bb\u6267\u884c\uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u63d2\u4ef6\u7684\u5b50\u4efb\u52a1\u5b9e\u73b0\u66f4\u52a0\u7b80\u5355\uff0c\u5728\u63d2\u4ef6\u8fd0\u884c\u5f53\u4e2d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u66f4\u5bb9\u6613\u7684\u53bb\u5e72\u6d89\uff08\u6bd4\u5982\u589e\u52a0\u65e5\u5fd7\u7b49\u7b49\uff09\\n\\n```go\\ntype PluginTask interface {\\n   // return all available subtasks, framework will run them for you in order\\n   SubTaskMetas() []SubTaskMeta\\n   // based on task context and user input options, return data that shared among all subtasks\\n   PrepareTaskData(taskCtx TaskContext, options map[string]interface{}) (interface{}, error)\\n}\\n```\\n3. \u6bcf\u4e2a\u63d2\u4ef6\u8fd8\u6709\u4e00\u4e2a<a id=\\"td\\">taskData</a>\uff0c\u91cc\u9762\u5305\u542b\u4e86\u914d\u7f6e\u9009\u9879\uff0capiClient\u4ee5\u53ca\u4e00\u4e9b\u63d2\u4ef6\u5176\u5b83\u5c5e\u6027\uff08\u6bd4\u5982github\u6709Repo\u4fe1\u606f\uff09\\n4. <a id=\\"stm\\">SubTaskMeta</a>: \u4e00\u4e2a\u5b50\u4efb\u52a1\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2a\u5b50\u4efb\u52a1\u90fd\u4f1a\u5b9a\u4e49\u4e00\u4e2aSubTaskMeta\\n\\n\\n```go\\nvar CollectMeetingTopUserItemMeta = core.SubTaskMeta{\\n   Name: \\"collectMeetingTopUserItem\\",\\n   EntryPoint: CollectMeetingTopUserItem,\\n   EnabledByDefault: true,\\n   Description: \\"Collect top user meeting data from Feishu api\\",\\n}\\n```\\n5. <a id=\\"ec\\">ExecContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c(\u5b50)\u4efb\u52a1\u9700\u8981\u7684\u6240\u6709\u8d44\u6e90\\n6. <a id=\\"stc\\">SubTaskContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c\u5b50\u4efb\u52a1\u6240\u9700\u8981\u7684\u8d44\u6e90\uff08\u5305\u542b\u4e86ExecContext\uff09\\n7. <a id=\\"tc\\">TaskContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c\u63d2\u4ef6\u4efb\u52a1\u6240\u9700\u8981\u7684\u8d44\u6e90\uff08\u5305\u542b\u4e86ExecContext\uff09\u3002\u4e0eSubTaskContext\u7684\u533a\u522b\u5728\u4e8eSubTaskContext\u4e2d\u7684TaskContext()\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56deTaskContext\uff0c\u800cTaskContext\u4e2d\u7684\u65b9\u6cd5SubTaskContext(subtask string)\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56deSubTaskContext\uff0c\u5b50\u4efb\u52a1\u96b6\u5c5e\u4e8e\u63d2\u4ef6\u4efb\u52a1\uff0c\u6240\u4ee5\u628a\u8fd9\u4e24\u4e2aContext\u8fdb\u884c\u4e86\u533a\u5206\\n8. <a id=\\"step\\">SubTaskEntryPoint</a>: \u6240\u6709\u7684\u63d2\u4ef6\u5b50\u4efb\u52a1\u90fd\u9700\u8981\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u624d\u80fd\u7531\u6846\u67b6\u5c42\u7edf\u4e00\u534f\u8c03\u5b89\u6392\\n\\n### \u540e\u7eed\\n\\n\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 DevLake \u7684\u67b6\u6784\u4ee5\u53ca\u8fd0\u884c\u6d41\u7a0b\uff0c\u8fd8\u6709\u4e09\u4e2a\u6838\u5fc3 api\\\\_collector\u3001api\\\\_extractor \u548c data\\\\_convertor \u5c06\u4f1a\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u8fdb\u884c\u5256\u6790\u3002"},{"id":"deadlock-caused-by-using-ants","metadata":{"permalink":"/blog/deadlock-caused-by-using-ants","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-04-30-deadlock-caused-by-using-ants/index.md","source":"@site/blog/2022-04-30-deadlock-caused-by-using-ants/index.md","title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","description":"1. \u80cc\u666f","date":"2022-04-30T00:00:00.000Z","formattedDate":"April 30, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"ants","permalink":"/blog/tags/ants"}],"readingTime":5.616666666666666,"truncated":true,"authors":[{"name":"Warren Chen","title":"Apache DevLake PPMC","url":"https://github.com/warren830","imageURL":"https://github.com/warren830.png","key":"warren"}],"frontMatter":{"slug":"deadlock-caused-by-using-ants","title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","authors":"warren","tags":["devlake","ants"]},"prevItem":{"title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","permalink":"/blog/how-apache-devlake-runs"}},"content":"### 1. \u80cc\u666f\\n\\n\u6211\u4eec\u7684\u9879\u76ee\u6709\u5927\u91cf\u7684api\u8bf7\u6c42\u7531goroutine\u5b8c\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f15\u5165\u4e00\u4e2apool\u6765\u8282\u7701\u9891\u7e41\u521b\u5efagoroutine\u6240\u9020\u6210\u7684\u7684\u5f00\u9500\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u66f4\u7b80\u6613\u7684\u8c03\u5ea6goroutine\uff0c\u5728\u5bf9github\u4e0a\u591a\u4e2a\u534f\u7a0b\u6c60\u7684\u5bf9\u6bd4\u540e\uff0c\u6211\u4eec\u6700\u7ec8\u9009\u5b9a\u4e86[ants](https://github.com/panjf2000/ants)\u4f5c\u4e3a\u6211\u4eec\u7684\u8c03\u5ea6\u7ba1\u7406pool\u3002\\n\\n1. \u6700\u8fd1\u5728\u6d4b\u8bd5\u4e2d\u5076\u7136\u53d1\u73b0\u7cfb\u7edf\u51fa\u73b0\u4e86\u201c\u6b7b\u9501\u201d\u7684\u60c5\u51b5\uff0c\u8fdb\u800c\u91c7\u53d6\u65ad\u7f51\u7684\u65b9\u5f0f\u53d1\u73b0\u201c\u6b7b\u9501\u201d\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u662f\u7a33\u5b9a\u51fa\u73b0\uff0c\u7ecf\u8fc7\u6ee1\u7bc7\u7684log\uff0cbreak\uff0c\u6700\u7ec8\u628a\u95ee\u9898\u5b9a\u4f4d\u5230\u4e86ants\u7684submit\u65b9\u6cd5\u3002\u8fd9\u4e2a\u95ee\u9898\u6765\u81ea\u4e8e\u5728\u4f7f\u7528ants pool\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u5b9e\u73b0\u91cd\u8bd5\uff0c\u6211\u4eec\u5728\u65b9\u6cd5\u4e2d\u53c8\u9012\u5f52\u8c03\u7528\u4e86\u65b9\u6cd5\u672c\u8eab\uff0c\u4e5f\u5c31\u662fsubmit task\u5185\u90e8\u53c8submit\u4e00\u4e2atask\uff0c\u4e0b\u9762\u662f\u7b80\u5316\u540e\u7684\u4ee3\u7801\uff1a\\n\\n\x3c!--truncate--\x3e\\n\\n\\n```Go\\nfunc (apiClient *ApiAsyncClient) DoAsync(\\n\\n   retry int,\\n\\n) error {\\n\\n   return apiClient.scheduler.Submit(func() error {\\n\\n      _, err := apiClient.Do()\\n\\n      if err != nil {\\n\\n         if retry < apiClient.maxRetry {\\n\\n            return apiClient.DoAsync(retry+1)\\n\\n         }\\n\\n      }\\n\\n      return err\\n\\n   })\\n\\n}\\n```\\n\\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230return apiClient.DoAsync(retry+1)\u8fd9\u4e00\u6b65\u9012\u5f52\u8c03\u7528\u4e86\u81ea\u5df1\uff0c\u5373\u5728submit\u4e2d\u53c8\u8c03\u7528\u4e86submit\\n\\n\\n### 2. \u6df1\u5165ants\u5206\u6790\\n\\n![img](ants_source_code_1.png)\\n\\n- \u5728\u4e0a\u9762submit\u6e90\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u9996\u5148\u662f\u901a\u8fc7retrieveWorker\u56de\u53bb\u4e00\u4e2aworker\uff0c\u7136\u540e\u628atask\u653e\u5165\u5230worker\u7684task channel\u5f53\u4e2d\uff0c\u5f88\u7b80\u5355\uff0c\u4e5f\u770b\u4e0d\u51fa\u6765\u4e3a\u4ec0\u4e48\u4f1a\u201cdead lock\u201d\uff0c\u6ca1\u529e\u6cd5\uff0c\u53bb\u5230retrieveWorker\\n\\n```Go\\n// retrieveWorker returns a available worker to run the tasks.\\n\\nfunc (p *Pool) retrieveWorker() (w *goWorker) {\\n\\n spawnWorker := func() {\\n\\n  w = p.workerCache.Get().(*goWorker)\\n\\n  w.run()\\n\\n }\\n\\n\\n\\n p.lock.Lock()\\n\\n\\n\\n w = p.workers.detach()\\n\\n if w != nil { // first try to fetch the worker from the queue\\n\\n  p.lock.Unlock()\\n\\n } else if capacity := p.Cap(); capacity == -1 || capacity > p.Running() {\\n\\n  // if the worker queue is empty and we don\'t run out of the pool capacity,\\n\\n  // then just spawn a new worker goroutine.\\n\\n  p.lock.Unlock()\\n\\n  spawnWorker()\\n\\n } else { // otherwise, we\'ll have to keep them blocked and wait for at least one worker to be put back into pool.\\n\\n  if p.options.Nonblocking {\\n\\n   p.lock.Unlock()\\n\\n   return\\n\\n  }\\n\\n retry:\\n\\n  if p.options.MaxBlockingTasks != 0 && p.blockingNum >= p.options.MaxBlockingTasks {\\n\\n   p.lock.Unlock()\\n\\n   return\\n\\n  }\\n\\n  p.blockingNum++\\n\\n  p.cond.Wait() // block and wait for an available worker\\n\\n  p.blockingNum--\\n\\n  var nw int\\n\\n  if nw = p.Running(); nw == 0 { // awakened by the scavenger\\n\\n   p.lock.Unlock()\\n\\n   if !p.IsClosed() {\\n\\n    spawnWorker()\\n\\n   }\\n\\n   return\\n\\n  }\\n\\n  if w = p.workers.detach(); w == nil {\\n\\n   if nw < capacity {\\n\\n    p.lock.Unlock()\\n\\n    spawnWorker()\\n\\n    return\\n\\n   }\\n\\n   goto retry\\n\\n  }\\n\\n\\n\\n  p.lock.Unlock()\\n\\n }\\n\\n return\\n\\n}\\n```\\n\\n![img](ants_source_code_flowchart.png)\\n\\n- \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5927\u6982\u6d41\u7a0b\u5c31\u662f\u5148\u5bf9pool\u4e0a\u9501\uff0c\u7136\u540e\u4ecepool\u7684worker\u961f\u5217\u4e2d\u53bb\u53d6\u4e00\u4e2aworker\uff0cdetach\u5176\u5b9e\u5c31\u662f\u8fd4\u56de\u4e86worker\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2aworker\u4ece\u961f\u5217\u4e2d\u5220\u9664\u6389\u4e86\uff0c\u63a5\u4e0b\u6765\u6709\u4e09\u79cd\u60c5\u51b5\\n  - \u5982\u679c\u6210\u529f\u53d6\u5230worker\uff0c\u89e3\u9501p\uff0c\u8fd4\u56de\u53d6\u5230\u7684worker\\n  - \u5982\u679cworker\u961f\u5217\u662f\u7a7a\u7684\u5e76\u4e14pool\u7684\u5bb9\u91cf\u6ca1\u6709\u8017\u5c3d\uff0c\u5c31\u89e3\u9501pool\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684worker\u8fd4\u56de\u7ed9submit\\n  - \u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5c31\u662fpool\u5bb9\u91cf\u8017\u5c3d\u4e86\uff0cworker\u961f\u5217\u4e5f\u6ca1\u6709\u7a7a\u95f2\u7684worker\uff0c\u90a3\u5c31\u8981\u6839\u636e\u6211\u4eec\u521b\u5efapool\u65f6\u4f20\u5165\u7684\u53c2\u6570\u6765\u51b3\u5b9a\u4e0b\u4e00\u6b65\u60c5\u51b5\u4e86\\n    - \u9996\u5148\u8bf4\u4e00\u4e0b\u8fd9\u91cc\u6d89\u53ca\u7684\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff0c\u4e00\u4e2a\u662fcapacity\uff0c\u8fd9\u4e2a\u503c\u5982\u679c\u5728new pool\u7684\u65f6\u5019\u4e0d\u8bbe\u7f6e\uff0c\u4f1a\u662fMaxInt32\uff0c\u76f8\u5f53\u4e8e\u65e0\u9650\u5236\u7684goroutine\uff0c\u4f46\u662f\u60c5\u51b5\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u4f1a\u9996\u5148\u590d\u7528\u7a7a\u95f2\u7684worker\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u65f6\u6e05\u7a7a\u591a\u4f59\u7684\u7a7a\u95f2worker\uff0cblockingNum\u4e3a\u6b63\u5728\u7b49\u5f85\u7684goroutine\uff0c\u521d\u59cb\u4e3a0\\n    - \u5982\u679c\u8bbe\u7f6e\u4e86Nonblocking\u4e3atrue\uff0c\u76f4\u63a5\u89e3\u9501\uff0c\u8fd4\u56denil\uff0csubmit\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u9519\u8befErrPoolOverload\uff0c\u4ee3\u8868pool\u8d85\u8d1f\u8377\u4e86\uff0c\u4e0d\u505a\u4efb\u4f55\u5176\u4ed6\u5904\u7406\uff0csubmit\u5931\u8d25\uff0c\u7ed3\u675f~~\\n    - \u53e6\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u6ca1\u6709\u8bbe\u7f6eNonblocking\uff0c\u9ed8\u8ba4\u4e3afalse\uff0c\u5c31\u8fdb\u5165\u5230\u4e86\u4e00\u4e2aretry\u6807\u7b7e\uff0c\u8fd9\u91cc\u9762\u5c31\u6d89\u53ca\u5230\u4e86\u53e6\u4e00\u4e2a\u521b\u5efapool\u65f6\u5019\u7684\u53c2\u6570MaxBlockingTasks\uff0c\u8fd9\u4e2aMaxBlockingTasks\u5c31\u662f\u4e00\u4e2athreshold\\n      - \u9996\u5148\u5224\u65ad\u5982\u679c\u8bbe\u7f6e\u4e86MaxBlockingTasks\u5e76\u4e14\u5f53\u524dblockingNum\u5927\u4e8e\u6216\u8005\u7b49\u4e8eMaxBlockingTasks\uff0c\u90a3\u4e48\u76f4\u63a5\u89e3\u9501pool\u5e76\u4e14\u8fd4\u56denil\uff0csubmit\u5931\u8d25\uff0c\u7ed3\u675f~~\\n      - \u4e0a\u9762\u7684\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u9996\u5148blockingNum++\uff0c\u7136\u540e\u5f00\u59cbwait\u4e00\u76f4\u5230\u6709worker\u6478\u5b8c\u9c7c\u56de\u6765\u5de5\u4f5c\uff0c\u5219blockingNum--\u3002\u95ee\u9898\u5c31\u5728\u8fd9\u91cc\u4e86\uff01\uff01\uff01\u5982\u679c\u6240\u6709\u7684worker\u90fd\u5728\u5de5\u4f5c\uff08\u4e5f\u8bb8\u662f\u770b\u8d77\u6765\u5728\u5de5\u4f5c\uff0c\u5b9e\u9645\u4e0a\u5728\u6478\u9c7c\uff09\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4e00\u76f4wait()\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u4ee3\u7801\u4e2dreturn\u540e\u9762\u7684DoAsync\u4f1a\u4e00\u76f4wait()\uff0c\u4ece\u6211\u4eec\u81ea\u5df1\u7684\u9879\u76ee\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709worker\u8fd9\u4e2a\u65f6\u5019\u90fd\u5728submit\u4e00\u4e2a\u65b0\u7684task\u5230\u540c\u4e00\u4e2apool\u4e2d\uff0c\u800c\u8fd9\u4e2a\u65f6\u5019pool\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5bfc\u81f4\u6240\u6709worker\u90fd\u963b\u585e\u5728\u4e86\u8fd9\u91cc\uff0c\u201c\u6b7b\u9501\u201d\u4e5f\u5c31\u51fa\u73b0\u4e86\\n\\n### 3. \u6700\u540e\u804a\u51e0\u53e5\u81ea\u5df1\u5bf9\u4e8egolang\u5185\u5b58\u6a21\u578b\u7684\u7406\u89e3\\n\\n1. go\u7684\u8c03\u5ea6\u6d41\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u751f\u4ea7-\u6d88\u8d39\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5229\u7528go func\u662f\u751f\u4ea7\u4e86\u4e00\u4e2atask\u653e\u5230\u961f\u5217\u4e2d\uff0c\u7531\u7cfb\u7edf\u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u534f\u7a0b\u7136\u540e\u6267\u884c\\n2. \u8bb2\u5230go\u7684\u8c03\u5ea6\u6d41\u7a0b\uff0c\u54b1\u4eec\u5c31\u4e0d\u80fd\u4e0d\u8bf4\u4e00\u4e0bgo\u7684MPG\uff08\u5206\u522b\u89e3\u91ca\u4e00\u4e0b\uff0c\u5c31\u4e0d\u505a\u6df1\u5165\u4e86\uff0c\u5982\u679c\u6709\u4eba\u770b\uff0c\u540e\u671f\u518d\u52aa\u529b\u6574\u7406\u4e00\u4efd\u8be6\u7ec6\u804a\u804a\uff09\\n   1. M \u4ee3\u8868\u7740\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u6240\u6709\u7684goroutine\u90fd\u662f\u8dd1\u5728M\u4e4b\u4e0a\u7684\\n   2. P\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u903b\u8f91\u5904\u7406\u5668\uff0c\u4e3b\u8981\u7531P\u6765\u6267\u884cgoroutine\\n   3. G\u5c31\u662fgo func\u5c01\u88c5\u7684\u8fd9\u4e2a\u65b9\u6cd5\\n3. \u771f\u6b63\u7684\u5e76\u53d1\u6570\u662f\u7531GOMAXPROCS\u6765\u51b3\u5b9a\u7684\uff0c\u5e76\u4e0d\u662f\u63d0\u4ea4\u591a\u5c11goroutine\uff0c\u5e76\u53d1\u6570\u5c31\u662f\u591a\u5c11\uff0cGOMAXPROCS\u662f\u7531\u673a\u5668\u7684cpu\u6838\u6570\u6765\u51b3\u5b9a\u7684\\n4. \u6240\u4ee5\u56de\u5230\u7b2c2\u90e8\u5206\uff0cpool.cond.wait\u7b49\u5f85\u7684\u662f\u7ed1\u5b9a\u4e0a\u4e00\u4e2agoroutine\uff0c\u548c\u5176\u4ed6\u8bed\u8a00\u7684\u7b49\u5f85\u7ebf\u7a0b\u5177\u6709\u76f8\u4f3c\u5374\u5b8c\u5168\u4e0d\u540c\u7684\u610f\u4e49\uff0c\u6bcf\u4e00\u4e2aworker\u662f\u4e00\u4e2aG\uff0cpool\u4e5f\u5c31\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u800cM\u4f1a\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u53ef\u4ee5\u6267\u884c\u7684G\uff0c\u5f53\u6240\u6709\u7684G\u90fd\u5728\u7b49\u5f85\u521b\u5efa\u65b0\u7684G\u65f6\uff0cM\u5168\u90e8\u90fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\\n\\n### 4. \u89e3\u51b3\u65b9\u6848\\n\\n1. \u5f53\u7136\uff0c\u6700\u9760\u8c31\u7684\u5e94\u8be5\u662f\u5c3d\u91cf\u907f\u514d\u7c7b\u4f3c\u8fd9\u6837\u7684\u9012\u5f52\u8c03\u7528\u64cd\u4f5c\\n2. \u5982\u679c\u5b9e\u5728\u4e0d\u884c\uff0c\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u4e00\u4e2asub pool\uff0c\u4f5c\u4e3a\u6b21\u7ea7\u961f\u5217\uff0c\u8ba9\u9012\u5f52\u751f\u6210\u7684G\u53ef\u4ee5\u5728sub pool\u91cc\u7b49\u5f85\u7a7a\u95f2\u7684M\u6765\u5904\u7406\\n\\n### 5. \u5bf9\u6bd4\u4e0d\u540csize\u7684pool\u548c\u4e24\u4e2apool\u7684\u5185\u5b58\uff08alloc_space\uff09\u548cCPU\u5f00\u9500\\n\\n| Pool size           | CPU(ants)% | CPU(runtime.gcBgMarkWorker)% | CPU(runtime.mcall)% | \u5185\u5b58(runtime.allocm)kB | \u5185\u5b58(runtime.gcBgMarkWorker)kB | \u5185\u5b58(root) |\\n| ------------------- | ---------- | ---------------------------- | ------------------- | ---------------------- | ------------------------------ | ---------- |\\n| Two pools(158, 632) | 27.98      | 7.73                         | 25.44               | 2050.25                | 512.02                         | 8798       |\\n| Pool 158            | 28.11      | 6.61                         | 25.08               | 2050                   |                                | 6661       |\\n| Pool 1580           | 27.41      | 12.96                        | 23.17               | 3075.38                |                                | 10264      |\\n| Pool 7900           | 25.89      | 9.82                         | 22.52               | 3587.94                |                                | 5725       |\\n| Pool 790000         | 25.12      | 12.79                        | 23.44               | 3075.38                |                                | 9748       |\\n\\nruntime.gcBgMarkWorker: \u7528\u4e8e\u6807\u8bb0\u5783\u573e\u5bf9\u8c61\\n\\n\u4ece\u4e0a\u9762\u7684\u8868\u683c\u53ef\u4ee5\u770b\u5230\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u6838\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6211\u4eec\u516c\u53f8\u73b0\u5728\u9700\u8981\u7684\u5e76\u53d1\u6570\u91cf\u7ea7\u6765\u8bb2\uff0cpool\u7684size\u5bf9\u7cfb\u7edf\u5f71\u54cd\u5e76\u4e0d\u5927\u3002"}]}')}}]);