"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[47759],{46880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));n(61839);const o={title:"DORA - Failed Deployment Recovery Time",description:"DORA - Failed Deployment Recovery Time\n",sidebar_position:28},r=void 0,d={unversionedId:"Metrics/FailedDeploymentRecoveryTime",id:"Metrics/FailedDeploymentRecoveryTime",title:"DORA - Failed Deployment Recovery Time",description:"DORA - Failed Deployment Recovery Time\n",source:"@site/docs/Metrics/FailedDeploymentRecoveryTime.md",sourceDirName:"Metrics",slug:"/Metrics/FailedDeploymentRecoveryTime",permalink:"/docs/Metrics/FailedDeploymentRecoveryTime",draft:!1,editUrl:"https://github.com/apache/incubator-devlake-website/edit/main/docs/Metrics/FailedDeploymentRecoveryTime.md",tags:[],version:"current",sidebarPosition:28,frontMatter:{title:"DORA - Failed Deployment Recovery Time",description:"DORA - Failed Deployment Recovery Time\n",sidebar_position:28},sidebar:"docsSidebar",previous:{title:"DORA - Median Lead Time for Changes",permalink:"/docs/Metrics/LeadTimeForChanges"},next:{title:"DORA - Median Time to Restore Service",permalink:"/docs/Metrics/MTTR"}},m={},s=[{value:"What is this metric?",id:"what-is-this-metric",level:2},{value:"Why is it important?",id:"why-is-it-important",level:2},{value:"Which dashboard(s) does it exist in",id:"which-dashboards-does-it-exist-in",level:2},{value:"How is it calculated?",id:"how-is-it-calculated",level:2},{value:"How to improve?",id:"how-to-improve",level:2}],l={toc:s};function c(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,i.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-is-this-metric"},"What is this metric?"),(0,a.kt)("p",null,"The time of changes that were made to a code that then resulted in incidents, rollbacks, or any type of production failure."),(0,a.kt)("h2",{id:"why-is-it-important"},"Why is it important?"),(0,a.kt)("p",null,"This metric is crucial in evaluating the resilience and efficiency of a team's deployment process. A shorter recovery time indicates a team's ability to swiftly detect issues, troubleshoot them, and restore the system to a functional state, minimizing downtime and impact on end-users. "),(0,a.kt)("h2",{id:"which-dashboards-does-it-exist-in"},"Which dashboard(s) does it exist in"),(0,a.kt)("p",null,"DORA dashboard. See ",(0,a.kt)("a",{parentName:"p",href:"https://grafana-lake.demo.devlake.io/grafana/d/qNo8_0M4z/dora?orgId=1"},"live demo"),"."),(0,a.kt)("h2",{id:"how-is-it-calculated"},"How is it calculated?"),(0,a.kt)("p",null,"The time from deployment to the incident corresponding to deployment is resolved. For example, if a deployment finishes at 10:00 AM and causes an incident at 10:20. Then, the incident gets resolved at 11:00 AM. The failed deployment recovery time is one hour."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(84111).Z,width:"3796",height:"1058"})),(0,a.kt)("p",null,"Below are the 2023 DORA benchmarks for different development teams from Google's report. However, it's difficult to tell which group a team falls into when the team's failed deployment recovery time is ",(0,a.kt)("inlineCode",{parentName:"p"},"between one week and six months"),". Therefore, DevLake provides its own benchmarks to address this problem:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Groups"),(0,a.kt)("th",{parentName:"tr",align:null},"Benchmarks"),(0,a.kt)("th",{parentName:"tr",align:null},"DevLake Benchmarks"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Elite performers"),(0,a.kt)("td",{parentName:"tr",align:null},"Less than one hour"),(0,a.kt)("td",{parentName:"tr",align:null},"Less than one hour")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"High performers"),(0,a.kt)("td",{parentName:"tr",align:null},"Less than one day"),(0,a.kt)("td",{parentName:"tr",align:null},"Less than one day")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Medium performers"),(0,a.kt)("td",{parentName:"tr",align:null},"Between one day and one week"),(0,a.kt)("td",{parentName:"tr",align:null},"Between one day and one week")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Low performers"),(0,a.kt)("td",{parentName:"tr",align:null},"More than six months"),(0,a.kt)("td",{parentName:"tr",align:null},"More than one week")))),(0,a.kt)("p",null,(0,a.kt)("i",null,"Source: 2023 Accelerate State of DevOps, Google")),(0,a.kt)("b",null,"Data Sources Required"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Deployments")," from Jenkins, GitLab CI, GitHub Action, BitBucket Pipelines, Webhook, etc. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Incidents")," from Jira issues, GitHub issues, TAPD issues, PagerDuty Incidents, Webhook, etc.")),(0,a.kt)("b",null,"Transformation Rules Required"),(0,a.kt)("p",null,"Define ",(0,a.kt)("inlineCode",{parentName:"p"},"deployment")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"incident")," in ",(0,a.kt)("a",{parentName:"p",href:"../Configuration/Tutorial#step-3---add-transformations-optional"},"data transformations")," while configuring the blueprint of a project to let DevLake know what CI/issue records can be regarded as deployments or incidents."),(0,a.kt)("b",null,"SQL Queries"),(0,a.kt)("p",null,"If you want to measure the monthly trend of the Failed Deployment Recovery Time as the picture shown below, run the following SQL in Grafana."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(66170).Z,width:"910",height:"295"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--  ***** 2023 report ***** --\n--  Metric 4: Failed deployment recovery time\nwith _deployments as (\n    SELECT\n        cdc.cicd_deployment_id as deployment_id,\n        max(cdc.finished_date) as deployment_finished_date\n    FROM \n        cicd_deployment_commits cdc\n        JOIN project_mapping pm on cdc.cicd_scope_id = pm.row_id and pm.`table` = 'cicd_scopes'\n    WHERE\n        pm.project_name in ($project)\n        and cdc.result = 'SUCCESS'\n        and cdc.environment = 'PRODUCTION'\n    GROUP BY 1\n    HAVING $__timeFilter(max(cdc.finished_date))\n),\n\n_incidents_for_deployments as (\n    SELECT\n        i.id as incident_id,\n        i.created_date as incident_create_date,\n        i.resolution_date as incident_resolution_date,\n        fd.deployment_id as caused_by_deployment,\n        fd.deployment_finished_date,\n        date_format(fd.deployment_finished_date,'%y/%m') as deployment_finished_month\n    FROM\n        issues i\n        left join project_issue_metrics pim on i.id = pim.id\n        join _deployments fd on pim.deployment_id = fd.deployment_id\n    WHERE\n        i.type = 'INCIDENT'\n    and $__timeFilter(i.resolution_date)\n),\n\n_recovery_time_ranks as (\n    SELECT *, percent_rank() over(PARTITION BY deployment_finished_month order by TIMESTAMPDIFF(MINUTE, deployment_finished_date, incident_resolution_date)) as ranks\n    FROM _incidents_for_deployments\n),\n\n_median_recovery_time as (\n    SELECT deployment_finished_month, max(TIMESTAMPDIFF(MINUTE, deployment_finished_date, incident_resolution_date)) as median_recovery_time\n    FROM _recovery_time_ranks\n    WHERE ranks <= 0.5\n    GROUP BY deployment_finished_month\n),\n\n_metric_recovery_time_2023_report as (\n    SELECT \n    cm.month,\n    case \n        when m.median_recovery_time is null then 0 \n        else m.median_recovery_time/60 \n        end as median_recovery_time_in_hour\n    FROM \n    calendar_months cm\n    LEFT JOIN _median_recovery_time m on cm.month = m.deployment_finished_month\n    WHERE $__timeFilter(cm.month_timestamp)\n)\n\nSELECT \n  cm.month,\n  CASE \n    WHEN '${dora_report}' = '2023' THEN mrt.median_recovery_time_in_hour\n  END AS '${title_value} In Hours'\nFROM \n  calendar_months cm\n  LEFT JOIN _metric_recovery_time_2023_report mrt ON cm.month = mrt.month\nWHERE \n  $__timeFilter(cm.month_timestamp)\n")),(0,a.kt)("p",null,"If you want to measure in which category your team falls into as in the picture shown below, run the following SQL in Grafana."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(9953).Z,width:"450",height:"177"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--  ***** 2023 report ***** --\n--  Metric 4: Failed deployment recovery time\nwith _deployments as (\n    SELECT\n        cdc.cicd_deployment_id as deployment_id,\n        max(cdc.finished_date) as deployment_finished_date\n    FROM \n        cicd_deployment_commits cdc\n        JOIN project_mapping pm on cdc.cicd_scope_id = pm.row_id and pm.`table` = 'cicd_scopes'\n    WHERE\n        pm.project_name in ($project)\n        and cdc.result = 'SUCCESS'\n        and cdc.environment = 'PRODUCTION'\n    GROUP BY 1\n    HAVING $__timeFilter(max(cdc.finished_date))\n),\n\n_incidents_for_deployments as (\n    SELECT\n        i.id as incident_id,\n        i.created_date as incident_create_date,\n        i.resolution_date as incident_resolution_date,\n        fd.deployment_id as caused_by_deployment,\n        fd.deployment_finished_date,\n        date_format(fd.deployment_finished_date,'%y/%m') as deployment_finished_month\n    FROM\n        issues i\n        left join project_issue_metrics pim on i.id = pim.id\n        join _deployments fd on pim.deployment_id = fd.deployment_id\n    WHERE\n        i.type = 'INCIDENT'\n    and $__timeFilter(i.resolution_date)\n),\n\n_recovery_time_ranks as (\n    SELECT *, percent_rank() over(order by TIMESTAMPDIFF(MINUTE, deployment_finished_date, incident_resolution_date)) as ranks\n    FROM _incidents_for_deployments\n),\n\n_median_recovery_time as (\n    SELECT max(TIMESTAMPDIFF(MINUTE, deployment_finished_date, incident_resolution_date)) as median_recovery_time\n    FROM _recovery_time_ranks\n    WHERE ranks <= 0.5\n),\n\n_metric_recovery_time_2023_report as(\n    SELECT \n    CASE\n        WHEN ('$dora_report') = '2023' THEN\n        CASE\n            WHEN median_recovery_time < 60 THEN  CONCAT(round(median_recovery_time/60,1), \"(elite)\")\n            WHEN median_recovery_time < 24 * 60 THEN CONCAT(round(median_recovery_time/60,1), \"(high)\")\n            WHEN median_recovery_time < 7 * 24 * 60 THEN CONCAT(round(median_recovery_time/60,1), \"(medium)\")\n            WHEN median_recovery_time >= 7 * 24 * 60 THEN CONCAT(round(median_recovery_time/60,1), \"(low)\")\n            ELSE \"N/A. Please check if you have collected incidents.\"\n        END\n    END AS median_recovery_time\n    FROM \n    _median_recovery_time\n)\n\nSELECT \n  median_recovery_time AS median_time_in_hour\nFROM \n  _metric_recovery_time_2023_report\nWHERE \n  ('$dora_report') = '2023'\n\n")),(0,a.kt)("h2",{id:"how-to-improve"},"How to improve?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add unit tests for all new feature"),(0,a.kt)("li",{parentName:"ul"},'"Shift left", start QA early and introduce more automated tests'),(0,a.kt)("li",{parentName:"ul"},"Enforce code review if it is not strictly executed"),(0,a.kt)("li",{parentName:"ul"},"Improve your user support workflow to cope with incidents more efficiently")))}c.isMDXComponent=!0},84111:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/fdrt-995d8559fd24da1d59a4db749fdbfddd.png"},9953:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/failed-deployment-recovery-time-text-53d49a25dc677446f388bd1ec32585a2.png"},66170:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/failed-deployment-recovery-time-9cb2dbd76f01d76677cbce7815d8414b.png"}}]);